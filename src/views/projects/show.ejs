<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= project.titulo %> - Gesti√≥n Colaborativa</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem 2rem;
            box-shadow: 0 2px 20px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1400px;
            margin: 0 auto;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 1.5rem;
            font-weight: 700;
            color: #667eea;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
        }

        .main-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        .breadcrumb {
            background: rgba(255, 255, 255, 0.9);
            padding: 1rem 1.5rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            backdrop-filter: blur(10px);
        }

        .breadcrumb a {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
        }

        .project-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
        }

        .project-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #2d3748;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .project-meta {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 1rem;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 12px;
            border-left: 4px solid #667eea;
        }

        .meta-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: 1px solid rgba(255,255,255,0.2);
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 60px rgba(0,0,0,0.15);
        }

        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .stat-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: #4a5568;
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: #2d3748;
            margin-bottom: 0.5rem;
        }

        .stat-description {
            color: #718096;
            font-size: 0.9rem;
        }

        .progress-container {
            margin-top: 1rem;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: #e2e8f0;
            border-radius: 4px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 4px;
            transition: width 0.8s ease;
        }

        .progress-text {
            display: flex;
            justify-content: space-between;
            margin-top: 0.5rem;
            font-size: 0.85rem;
            color: #718096;
        }

        .content-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .main-content {
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }

        .sidebar {
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }

        .section-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
        }

        .section-title {
            font-size: 1.4rem;
            font-weight: 700;
            color: #2d3748;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .deliverable-item {
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .deliverable-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .deliverable-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 1rem;
        }

        .deliverable-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 0.5rem;
        }

        .deliverable-meta {
            display: flex;
            gap: 1rem;
            font-size: 0.85rem;
            color: #718096;
            margin-bottom: 1rem;
        }

        .status-badge {
            padding: 0.4rem 1rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-pendiente {
            background: linear-gradient(135deg, #ffd89b, #19547b);
            color: white;
        }

        .status-en-progreso {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .status-completado {
            background: linear-gradient(135deg, #11998e, #38ef7d);
            color: white;
        }

        .status-retrasado {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-size: 0.9rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-secondary {
            background: #e2e8f0;
            color: #4a5568;
        }

        .btn-secondary:hover {
            background: #cbd5e0;
        }

        .btn-success {
            background: linear-gradient(135deg, #11998e, #38ef7d);
            color: white;
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(17, 153, 142, 0.3);
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #718096;
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.3;
        }

        .team-member {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            background: rgba(102, 126, 234, 0.05);
            border-radius: 12px;
            margin-bottom: 1rem;
        }

        .member-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
        }

        .member-info h4 {
            margin: 0;
            color: #2d3748;
            font-weight: 600;
        }

        .member-info p {
            margin: 0;
            color: #718096;
            font-size: 0.9rem;
        }

        .quick-actions {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 1.5rem;
            border-radius: 10px;
            color: white;
            z-index: 1000;
            font-weight: 600;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            backdrop-filter: blur(10px);
        }

        .notification.success {
            background: linear-gradient(135deg, #11998e, #38ef7d);
        }

        .notification.error {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 0;
            width: 90%;
            max-width: 600px;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            overflow: hidden;
        }

        .modal-header {
            padding: 2rem;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h3 {
            margin: 0;
            font-weight: 700;
        }

        .modal-body {
            padding: 2rem;
        }

        .modal-footer {
            padding: 1.5rem 2rem;
            background: #f8f9fa;
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #4a5568;
        }

        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: white;
            opacity: 0.8;
            transition: opacity 0.3s ease;
        }

        .close-btn:hover {
            opacity: 1;
        }

        @media (max-width: 768px) {
            .content-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .project-meta {
                grid-template-columns: 1fr;
            }
            
            .main-container {
                padding: 1rem;
            }
            
            .project-header {
                padding: 1.5rem;
            }
            
            .project-title {
                font-size: 2rem;
            }
        }

        .priority-high {
            border-left: 4px solid #ff6b6b;
        }

        .priority-medium {
            border-left: 4px solid #ffd89b;
        }

        .priority-low {
            border-left: 4px solid #11998e;
        }

        .overdue {
            background: linear-gradient(135deg, rgba(255, 107, 107, 0.1), rgba(238, 90, 36, 0.1));
            border-color: #ff6b6b;
        }

        .due-soon {
            background: linear-gradient(135deg, rgba(255, 216, 155, 0.1), rgba(25, 84, 123, 0.1));
            border-color: #ffd89b;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-in {
            animation: slideIn 0.6s ease-out;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="header-content">
            <div class="logo">
                <i class="fas fa-graduation-cap"></i>
                Gesti√≥n Colaborativa
            </div>
            <div class="user-info">
                <span>Hola, <strong><%= user.nombres %> <%= user.apellidos || '' %></strong></span>  
                <div class="user-avatar">
                    <%= (user.nombres || 'U').charAt(0).toUpperCase() %>
                </div>
                <a href="/logout" class="btn btn-secondary">
                    <i class="fas fa-sign-out-alt"></i>
                    Salir
                </a>
            </div>
        </div>
    </header>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Breadcrumb -->
        <nav class="breadcrumb animate-in">
            <a href="/dashboard"><i class="fas fa-home"></i> Dashboard</a>
            <span> / </span>
            <a href="/dashboard">Mis Proyectos</a>
            <span> / </span>
            <span><%= project.titulo %></span>
        </nav>

        <!-- Project Header -->
        <div class="project-header animate-in">
            <h1 class="project-title"><%= project.titulo %></h1>
            <p style="font-size: 1.1rem; color: #718096; line-height: 1.6; margin-bottom: 1.5rem;">
                <%= project.descripcion || 'Sin descripci√≥n disponible' %>
            </p>
            
            <div class="project-meta">
                <div class="meta-item">
                    <div class="meta-icon">
                        <i class="fas fa-calendar-start"></i>
                    </div>
                    <div>
                        <strong>Fecha de Inicio</strong>
                        <p><%= project.fecha_inicio ? new Date(project.fecha_inicio).toLocaleDateString('es-ES') : 'No definida' %></p>
                    </div>
                </div>
                <div class="meta-item">
                    <div class="meta-icon">
                        <i class="fas fa-calendar-check"></i>
                    </div>
                    <div>
                        <strong>Fecha de Fin</strong>
                        <p><%= project.fecha_fin ? new Date(project.fecha_fin).toLocaleDateString('es-ES') : 'No definida' %></p>
                    </div>
                </div>
                <div class="meta-item">
                    <div class="meta-icon">
                        <i class="fas fa-user-tie"></i>
                    </div>
                    <div>
                        <strong>Director</strong>
                        <p><%= project.director_nombre || 'No asignado' %></p>
                    </div>
                </div>
                <div class="meta-item">
                    <div class="meta-icon">
                        <i class="fas fa-flask"></i>
                    </div>
                    <div>
                        <strong>L√≠nea de Investigaci√≥n</strong>
                        <p><%= project.linea_investigacion || 'No definida' %></p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics Grid -->
        <div class="stats-grid animate-in">
            <div class="stat-card">
                <div class="stat-header">
                    <div class="stat-title">Progreso General</div>
                    <div class="stat-icon" style="background: linear-gradient(135deg, #667eea, #764ba2);">
                        <i class="fas fa-chart-line"></i>
                    </div>
                </div>
                <div class="stat-value" id="overall-progress">0%</div>
                <div class="stat-description">Progreso total del proyecto</div>
                <div class="progress-container">
                    <div class="progress-bar">
                        <div class="progress-fill" id="overall-progress-fill" style="width: 0%"></div>
                    </div>
                    <div class="progress-text">
                        <span>Inicio</span>
                        <span id="overall-progress-text">0%</span>
                    </div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div class="stat-title">Entregables</div>
                    <div class="stat-icon" style="background: linear-gradient(135deg, #11998e, #38ef7d);">
                        <i class="fas fa-tasks"></i>
                    </div>
                </div>
                <div class="stat-value" id="deliverables-completed">0</div>
                <div class="stat-description">de <span id="total-deliverables">0</span> entregables</div>
                <div class="progress-container">
                    <div class="progress-bar">
                        <div class="progress-fill" id="deliverables-progress-fill" style="width: 0%"></div>
                    </div>
                    <div class="progress-text">
                        <span>Completados</span>
                        <span id="deliverables-progress-text">0%</span>
                    </div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div class="stat-title">Tiempo Restante</div>
                    <div class="stat-icon" style="background: linear-gradient(135deg, #ffd89b, #19547b);">
                        <i class="fas fa-clock"></i>
                    </div>
                </div>
                <div class="stat-value" id="days-remaining">0</div>
                <div class="stat-description">d√≠as restantes</div>
                <div class="progress-container">
                    <div class="progress-bar">
                        <div class="progress-fill" id="time-progress-fill" style="width: 0%"></div>
                    </div>
                    <div class="progress-text">
                        <span>Tiempo transcurrido</span>
                        <span id="time-progress-text">0%</span>
                    </div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div class="stat-title">Estado del Proyecto</div>
                    <div class="stat-icon" style="background: linear-gradient(135deg, #ff6b6b, #ee5a24);">
                        <i class="fas fa-flag"></i>
                    </div>
                </div>
                <div class="stat-value" style="font-size: 1.5rem;">
                    <span class="status-badge status-<%= project.estado ? project.estado.toLowerCase().replace(' ', '-') : 'pendiente' %>">
                        <%= project.estado || 'Pendiente' %>
                    </span>
                </div>
                <div class="stat-description">Estado actual</div>
            </div>
        </div>

        <!-- Content Grid -->
        <div class="content-grid">
            <!-- Main Content -->
            <div class="main-content">
                <!-- Quick Actions -->
                <div class="quick-actions animate-in">
                    <% if (user.rol_nombre === 'Estudiante' && project.estudiante_id === user.id) { %>
                        <button class="btn btn-primary" onclick="showDeliverableModal()">
                            <i class="fas fa-plus"></i>
                            Nuevo Entregable
                        </button>
                        <button class="btn btn-success" onclick="showCommentModal()">
                            <i class="fas fa-comment"></i>
                            Agregar Comentario
                        </button>
                    <% } %>
                    <button class="btn btn-secondary" onclick="downloadProjectReport()">
                        <i class="fas fa-download"></i>
                        Descargar Reporte
                    </button>
                </div>

                <!-- Deliverables Section -->
                <div class="section-card animate-in">
                    <div class="section-title">
                        <i class="fas fa-tasks"></i>
                        Entregables del Proyecto
                    </div>
                    <div id="deliverables-list">
                        <!-- Deliverables will be loaded here -->
                    </div>
                    <div id="deliverables-empty" class="empty-state" style="display: none;">
                        <i class="fas fa-tasks"></i>
                        <h3>No hay entregables</h3>
                        <p>A√∫n no se han creado entregables para este proyecto</p>
                        <% if (user.rol_nombre === 'Estudiante' && project.estudiante_id === user.id) { %>
                            <button class="btn btn-primary" onclick="showDeliverableModal()">
                                <i class="fas fa-plus"></i>
                                Crear Primer Entregable
                            </button>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Team Information -->
                <div class="section-card animate-in">
                    <div class="section-title">
                        <i class="fas fa-users"></i>
                        Equipo del Proyecto
                    </div>
                    
                    <% if (project.estudiante_nombre) { %>
                        <div class="team-member">
                            <div class="member-avatar">
                                <%= project.estudiante_nombre.charAt(0).toUpperCase() %>
                            </div>
                            <div class="member-info">
                                <h4><%= project.estudiante_nombre %></h4>
                                <p>Estudiante</p>
                            </div>
                        </div>
                    <% } %>
                    
                    <% if (project.director_nombre) { %>
                        <div class="team-member">
                            <div class="member-avatar">
                                <%= project.director_nombre.charAt(0).toUpperCase() %>
                            </div>
                            <div class="member-info">
                                <h4><%= project.director_nombre %></h4>
                                <p>Director del Proyecto</p>
                            </div>
                        </div>
                    <% } %>
                </div>

                <!-- Recent Comments -->
                <div class="section-card animate-in">
                    <div class="section-title">
                        <i class="fas fa-comments"></i>
                        Comentarios Recientes
                    </div>
                    <div id="recent-comments">
                        <!-- Recent comments will be loaded here -->
                    </div>
                    <div id="comments-empty" class="empty-state" style="display: none;">
                        <i class="fas fa-comments"></i>
                        <h4>No hay comentarios</h4>
                        <p>S√© el primero en comentar</p>
                    </div>
                    <button class="btn btn-primary" onclick="showCommentModal()" style="width: 100%; margin-top: 1rem;">
                        <i class="fas fa-plus"></i>
                        Agregar Comentario
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Deliverable Modal -->
    <div id="deliverable-modal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="deliverable-modal-title">Nuevo Entregable</h3>
                <button type="button" class="close-btn" onclick="closeDeliverableModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <form id="deliverable-form">
                    <div class="form-group">
                        <label for="deliverable-title">T√≠tulo *</label>
                        <input type="text" id="deliverable-title" name="titulo" required placeholder="Ingresa el t√≠tulo del entregable">
                    </div>
                    
                    <div class="form-group">
                        <label for="deliverable-description">Descripci√≥n</label>
                        <textarea id="deliverable-description" name="descripcion" rows="3" placeholder="Describe el entregable (opcional)"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="deliverable-due-date">Fecha de Vencimiento *</label>
                        <input type="date" id="deliverable-due-date" name="fecha_entrega" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="deliverable-status">Estado</label>
                        <select id="deliverable-status" name="estado">
                            <option value="Pendiente">Pendiente</option>
                            <option value="En Progreso">En Progreso</option>
                            <option value="Completado">Completado</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeDeliverableModal()">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="saveDeliverable()">Guardar</button>
            </div>
        </div>
    </div>

    <!-- Comment Modal -->
    <div id="comment-modal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Agregar Comentario</h3>
                <button type="button" class="close-btn" onclick="closeCommentModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <form id="comment-form" enctype="multipart/form-data">
                    <div class="form-group">
                        <label for="comment-text">Comentario *</label>
                        <textarea id="comment-text" name="comentario" rows="4" required placeholder="Escribe tu comentario aqu√≠..."></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="comment-type">Tipo</label>
                        <select id="comment-type" name="tipo">
                            <option value="general">General</option>
                            <option value="feedback">Feedback</option>
                            <option value="pregunta">Pregunta</option>
                            <option value="sugerencia">Sugerencia</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="comment-file">Archivo Adjunto (opcional)</label>
                        <input type="file" id="comment-file" name="archivo">
                        <small style="color: #718096; font-size: 0.85rem;">M√°ximo 10MB. Formatos: PDF, DOC, DOCX, JPG, PNG</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeCommentModal()">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="saveComment()">Guardar Comentario</button>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let projectData = {
            id: <%= project.id %>,
            titulo: '<%= project.titulo %>',
            fecha_inicio: '<%= project.fecha_inicio || '' %>',
            fecha_fin: '<%= project.fecha_fin || '' %>',
            estado: '<%= project.estado || 'Pendiente' %>'
        };

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadDeliverables();
            loadRecentComments();
            addAnimations();
            console.log('Project detail page loaded successfully');
        });

        // Deliverables Management
        function loadDeliverables() {
            fetch(`/projects/${projectData.id}/deliverables`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        displayDeliverables(data.deliverables);
                        updateProjectStats(data.deliverables);
                    } else {
                        console.error('Error loading deliverables:', data.message);
                        showEmptyDeliverables();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showEmptyDeliverables();
                });
        }

        function displayDeliverables(deliverables) {
            const container = document.getElementById('deliverables-list');
            const emptyState = document.getElementById('deliverables-empty');
            
            if (deliverables.length === 0) {
                container.innerHTML = '';
                emptyState.style.display = 'block';
                return;
            }
            
            emptyState.style.display = 'none';
            
            const html = deliverables.map(deliverable => {
                const dueDate = new Date(deliverable.fecha_entrega);
                const today = new Date();
                const isOverdue = dueDate < today && deliverable.estado !== 'completado';
                const isNearDue = (dueDate - today) / (1000 * 60 * 60 * 24) <= 3 && deliverable.estado !== 'completado';
                
                let priorityClass = '';
                let extraClasses = '';
                
                if (isOverdue) {
                    extraClasses = 'overdue';
                    priorityClass = 'priority-high';
                } else if (isNearDue) {
                    extraClasses = 'due-soon';
                    priorityClass = 'priority-medium';
                } else {
                    priorityClass = 'priority-low';
                }
                
                return `
                    <div class="deliverable-item ${extraClasses} ${priorityClass} animate-in">
                        <div class="deliverable-header">
                            <div style="flex: 1;">
                                <div class="deliverable-title">
                                    ${deliverable.titulo}
                                    ${isOverdue ? '<i class="fas fa-exclamation-triangle" style="color: #ff6b6b; margin-left: 8px;" title="Vencido"></i>' : ''}
                                    ${isNearDue ? '<i class="fas fa-clock" style="color: #ffd89b; margin-left: 8px;" title="Pr√≥ximo a vencer"></i>' : ''}
                                </div>
                                <p style="color: #718096; margin: 0.5rem 0;">${deliverable.descripcion || 'Sin descripci√≥n'}</p>
                                <div class="deliverable-meta">
                                    <span><i class="fas fa-calendar"></i> Vence: ${dueDate.toLocaleDateString('es-ES')}</span>
                                    <span class="status-badge status-${deliverable.estado.toLowerCase().replace(' ', '-')}">${deliverable.estado}</span>
                                </div>
                            </div>
                            <div style="display: flex; gap: 10px; align-items: flex-start;">
                                <% if (user.rol_nombre === 'Estudiante' && project.estudiante_id === user.id) { %>
                                    <button class="btn btn-secondary" onclick="editDeliverable(${deliverable.id})" style="padding: 0.5rem;">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn" onclick="deleteDeliverable(${deliverable.id})" style="padding: 0.5rem; background: #ff6b6b; color: white;">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                <% } %>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
            
            container.innerHTML = html;
        }

        function showEmptyDeliverables() {
            document.getElementById('deliverables-list').innerHTML = '';
            document.getElementById('deliverables-empty').style.display = 'block';
        }

        function updateProjectStats(deliverables) {
            const stats = calculateProjectStats(deliverables);
            
            // Update stat values
            document.getElementById('deliverables-completed').textContent = stats.completedDeliverables;
            document.getElementById('total-deliverables').textContent = stats.totalDeliverables;
            document.getElementById('days-remaining').textContent = stats.daysRemaining;
            document.getElementById('overall-progress').textContent = stats.overallProgress + '%';
            
            // Update progress bars
            updateProgressBar('overall-progress', stats.overallProgress);
            updateProgressBar('deliverables-progress', stats.deliverablesProgress);
            updateProgressBar('time-progress', stats.timeProgress);
            
            // Update progress texts
            document.getElementById('overall-progress-text').textContent = stats.overallProgress + '%';
            document.getElementById('deliverables-progress-text').textContent = stats.deliverablesProgress + '%';
            document.getElementById('time-progress-text').textContent = stats.timeProgress + '%';
        }

        function calculateProjectStats(deliverables) {
            const stats = {
                totalDeliverables: deliverables.length,
                completedDeliverables: deliverables.filter(d => d.estado === 'completado').length,
                inProgressDeliverables: deliverables.filter(d => d.estado === 'en_progreso').length,
                pendingDeliverables: deliverables.filter(d => d.estado === 'pendiente').length
            };
            
            // Calculate progress percentages
            stats.deliverablesProgress = stats.totalDeliverables > 0 
                ? Math.round((stats.completedDeliverables / stats.totalDeliverables) * 100)
                : 0;
            
            // Calculate time progress
            if (projectData.fecha_inicio && projectData.fecha_fin) {
                const startDate = new Date(projectData.fecha_inicio);
                const endDate = new Date(projectData.fecha_fin);
                const today = new Date();
                
                if (endDate > startDate) {
                    const totalDuration = endDate - startDate;
                    const elapsed = today - startDate;
                    stats.timeProgress = Math.max(0, Math.min(100, Math.round((elapsed / totalDuration) * 100)));
                    
                    const remainingTime = endDate - today;
                    stats.daysRemaining = Math.max(0, Math.ceil(remainingTime / (1000 * 60 * 60 * 24)));
                } else {
                    stats.timeProgress = 0;
                    stats.daysRemaining = 0;
                }
            } else {
                stats.timeProgress = 0;
                stats.daysRemaining = 0;
            }
            
            // Calculate overall progress (weighted average)
            stats.overallProgress = Math.round((stats.deliverablesProgress * 0.7) + (stats.timeProgress * 0.3));
            
            return stats;
        }

        function updateProgressBar(prefix, percentage) {
            const fillElement = document.getElementById(prefix + '-fill');
            if (fillElement) {
                fillElement.style.width = percentage + '%';
            }
        }

        // Modal Management
        function showDeliverableModal() {
            const modal = document.getElementById('deliverable-modal');
            const form = document.getElementById('deliverable-form');
            const title = document.getElementById('deliverable-modal-title');
            
            title.textContent = 'Nuevo Entregable';
            form.reset();
            form.dataset.mode = 'create';
            delete form.dataset.deliverableId;
            
            // Set minimum date to today
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('deliverable-due-date').min = today;
            
            modal.style.display = 'block';
        }

        function closeDeliverableModal() {
            document.getElementById('deliverable-modal').style.display = 'none';
        }

        function editDeliverable(id) {
            fetch(`/projects/${projectData.id}/deliverables`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const deliverable = data.deliverables.find(d => d.id === id);
                        if (deliverable) {
                            showEditDeliverableModal(deliverable);
                        }
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error al cargar el entregable', 'error');
                });
        }

        function showEditDeliverableModal(deliverable) {
            const modal = document.getElementById('deliverable-modal');
            const form = document.getElementById('deliverable-form');
            const title = document.getElementById('deliverable-modal-title');
            
            title.textContent = 'Editar Entregable';
            form.dataset.mode = 'edit';
            form.dataset.deliverableId = deliverable.id;
            
            // Fill form with deliverable data
            document.getElementById('deliverable-title').value = deliverable.titulo;
            document.getElementById('deliverable-description').value = deliverable.descripcion || '';
            document.getElementById('deliverable-due-date').value = deliverable.fecha_entrega.split('T')[0];
            document.getElementById('deliverable-status').value = deliverable.estado;
            
            modal.style.display = 'block';
        }

        function saveDeliverable() {
            const form = document.getElementById('deliverable-form');
            const formData = new FormData(form);
            const mode = form.dataset.mode;
            const deliverableId = form.dataset.deliverableId;
            
            const data = {
                titulo: formData.get('titulo'),
                descripcion: formData.get('descripcion'),
                fecha_entrega: formData.get('fecha_entrega'),
                estado: formData.get('estado')
            };
            
            if (!data.titulo.trim()) {
                showNotification('El t√≠tulo es requerido', 'error');
                return;
            }
            
            if (!data.fecha_entrega) {
                showNotification('La fecha de vencimiento es requerida', 'error');
                return;
            }
            
            const url = mode === 'create' 
                ? `/projects/${projectData.id}/deliverables`
                : `/projects/${projectData.id}/deliverables/${deliverableId}`;
            
            const method = mode === 'create' ? 'POST' : 'PUT';
            
            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    closeDeliverableModal();
                    loadDeliverables();
                    showNotification(data.message || 'Entregable guardado exitosamente', 'success');
                } else {
                    showNotification(data.message || 'Error al guardar el entregable', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Error al guardar el entregable', 'error');
            });
        }

        function deleteDeliverable(id) {
            if (confirm('¬øEst√°s seguro de que quieres eliminar este entregable?')) {
                fetch(`/projects/${projectData.id}/deliverables/${id}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        loadDeliverables();
                        showNotification(data.message || 'Entregable eliminado exitosamente', 'success');
                    } else {
                        showNotification(data.message || 'Error al eliminar el entregable', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error al eliminar el entregable', 'error');
                });
            }
        }

        // Comments Management
        function showCommentModal() {
            const modal = document.getElementById('comment-modal');
            const form = document.getElementById('comment-form');
            
            form.reset();
            modal.style.display = 'block';
        }

        function closeCommentModal() {
            document.getElementById('comment-modal').style.display = 'none';
        }

        function saveComment() {
            const form = document.getElementById('comment-form');
            const formData = new FormData(form);
            
            if (!formData.get('comentario').trim()) {
                showNotification('El comentario no puede estar vac√≠o', 'error');
                return;
            }
            
            fetch(`/projects/${projectData.id}/comments`, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    closeCommentModal();
                    loadRecentComments();
                    showNotification('Comentario agregado exitosamente', 'success');
                } else {
                    showNotification(data.message || 'Error al agregar comentario', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Error al agregar comentario', 'error');
            });
        }

        function loadRecentComments() {
            fetch(`/projects/${projectData.id}/comments?limit=3`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    displayRecentComments(data.comments);
                } else {
                    console.error('Error loading comments:', data.message);
                    showEmptyComments();
                }
            })
            .catch(error => {
                console.error('Error loading comments:', error);
                showEmptyComments();
            });
        }

        function displayRecentComments(comments) {
            const container = document.getElementById('recent-comments');
            const emptyState = document.getElementById('comments-empty');
            
            if (comments.length === 0) {
                container.innerHTML = '';
                emptyState.style.display = 'block';
                return;
            }
            
            emptyState.style.display = 'none';
            
            const html = comments.map(comment => {
                const date = new Date(comment.fecha_creacion).toLocaleDateString('es-ES', {
                    month: 'short',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
                
                const typeColors = {
                    'general': '#6c757d',
                    'feedback': '#11998e',
                    'pregunta': '#667eea',
                    'sugerencia': '#ffd89b'
                };
                
                return `
                    <div style="border-left: 3px solid ${typeColors[comment.tipo] || '#6c757d'}; padding: 1rem; margin-bottom: 1rem; background: rgba(102, 126, 234, 0.05); border-radius: 0 8px 8px 0;">
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.5rem;">
                            <strong style="color: #2d3748; font-size: 0.9rem;">${comment.nombre_usuario}</strong>
                            <span style="color: #718096; font-size: 0.8rem;">${date}</span>
                        </div>
                        <p style="margin: 0; color: #4a5568; font-size: 0.9rem; line-height: 1.4;">${comment.comentario}</p>
                        <span style="background: ${typeColors[comment.tipo] || '#6c757d'}; color: white; padding: 2px 6px; border-radius: 10px; font-size: 0.7rem; margin-top: 0.5rem; display: inline-block;">
                            ${comment.tipo}
                        </span>
                    </div>
                `;
            }).join('');
            
            container.innerHTML = html;
        }

        function showEmptyComments() {
            document.getElementById('recent-comments').innerHTML = '';
            document.getElementById('comments-empty').style.display = 'block';
        }

        // Utility Functions
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'}"></i>
                ${message}
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.opacity = '0';
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 3000);
        }

        function downloadProjectReport() {
            showNotification('Generando reporte del proyecto...', 'success');
            // TODO: Implement report generation
            setTimeout(() => {
                showNotification('Funcionalidad de reporte en desarrollo', 'error');
            }, 1500);
        }

        function addAnimations() {
            const elements = document.querySelectorAll('.animate-in');
            elements.forEach((element, index) => {
                element.style.animationDelay = `${index * 0.1}s`;
            });
        }

        // Close modals when clicking outside
        window.onclick = function(event) {
            const deliverableModal = document.getElementById('deliverable-modal');
            const commentModal = document.getElementById('comment-modal');
            
            if (event.target === deliverableModal) {
                closeDeliverableModal();
            }
            if (event.target === commentModal) {
                closeCommentModal();
            }
        }
    </script>
</body>
</html>