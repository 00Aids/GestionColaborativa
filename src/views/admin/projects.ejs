<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Sistema Acad√©mico</title>
    <link rel="stylesheet" href="/css/dashboard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* ===== SIDEBAR MODERNO ===== */
        .sidebar {
            position: fixed;
            left: 0;
            top: 0;
            width: 280px;
            height: 100vh;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            padding: 0;
            box-shadow: 4px 0 20px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            transition: all 0.3s ease;
            border-right: 1px solid rgba(255, 255, 255, 0.2);
        }

        .sidebar-header {
            padding: 30px 25px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .sidebar-header h2 {
            font-size: 22px;
            font-weight: 700;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .sidebar-header .subtitle {
            font-size: 12px;
            opacity: 0.8;
            margin-top: 5px;
            font-weight: 400;
        }

        .sidebar-nav {
            padding: 20px 0;
            height: calc(100vh - 120px);
            overflow-y: auto;
        }

        .nav-section {
            margin-bottom: 25px;
        }

        .nav-section-title {
            font-size: 11px;
            font-weight: 600;
            color: #94a3b8;
            text-transform: uppercase;
            letter-spacing: 1px;
            padding: 0 25px 8px;
            margin-bottom: 8px;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 12px 25px;
            color: #64748b;
            text-decoration: none;
            transition: all 0.3s ease;
            font-weight: 500;
            font-size: 14px;
            border-left: 3px solid transparent;
        }

        .nav-item i {
            width: 20px;
            margin-right: 12px;
            font-size: 16px;
        }

        .nav-item:hover {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            border-left-color: #667eea;
        }

        .nav-item.active {
            background: rgba(102, 126, 234, 0.15);
            color: #667eea;
            border-left-color: #667eea;
            font-weight: 600;
        }

        .nav-item-badge {
            background: #ef4444;
            color: white;
            font-size: 10px;
            padding: 2px 6px;
            border-radius: 10px;
            margin-left: auto;
            font-weight: 600;
        }

        /* ===== MAIN CONTENT ===== */
        .main-content {
            margin-left: 280px;
            min-height: 100vh;
            background: transparent;
        }

        .top-bar {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 20px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        .page-title-section {
            flex: 1;
            margin: 0 20px;
        }
        
        .title-and-actions {
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 100%;
        }
        
        .title-content {
            text-align: left;
        }
        
        .page-main-title {
            color: white;
            font-size: 24px;
            font-weight: 600;
            margin: 0;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .page-subtitle {
            color: rgba(255, 255, 255, 0.8);
            font-size: 14px;
            margin: 5px 0 0 0;
            font-weight: 400;
        }
        
        .btn-new-project {
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s ease;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-new-project:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        /* Back Navigation Styles */
        .title-content-with-nav {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .back-navigation {
            display: flex;
            align-items: center;
        }
        
        .back-arrow {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            background: rgba(255, 255, 255, 0.9);
            color: #667eea;
            border-radius: 50%;
            text-decoration: none;
            transition: all 0.3s ease;
            border: 1px solid rgba(102, 126, 234, 0.3);
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.2);
        }
        
        .back-arrow:hover {
            background: rgba(255, 255, 255, 1);
            color: #764ba2;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(118, 75, 162, 0.3);
            border-color: rgba(118, 75, 162, 0.4);
            text-decoration: none;
        }
        
        .back-arrow i {
            font-size: 16px;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 15px;
            color: white;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            border: 2px solid rgba(255, 255, 255, 0.3);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .user-avatar:hover {
            border-color: white;
            transform: scale(1.05);
        }

        .user-info h4 {
            font-size: 14px;
            font-weight: 600;
            margin: 0;
        }

        .user-info span {
            font-size: 12px;
            opacity: 0.8;
        }

        .logout-btn {
            background: rgba(239, 68, 68, 0.2);
            color: white;
            border: 1px solid rgba(239, 68, 68, 0.3);
            padding: 8px 15px;
            border-radius: 20px;
            text-decoration: none;
            font-size: 12px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .logout-btn:hover {
            background: #ef4444;
            color: white;
            text-decoration: none;
        }
        
        .mobile-menu-toggle {
            display: none;
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            font-size: 18px;
            cursor: pointer;
            padding: 10px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .mobile-menu-toggle:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        
        @media (max-width: 768px) {
            .mobile-menu-toggle {
                display: block;
            }
        }

        /* ===== DASHBOARD CONTENT ===== */
        .dashboard-content {
            padding: 30px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Header */
        .page-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 20px;
        }

        .page-title {
            font-size: 2.2rem;
            font-weight: 700;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .page-title i {
            color: #667eea;
        }

        .header-actions {
            display: flex;
            gap: 15px;
            align-items: center;
        }

        /* Statistics Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            color: #667eea;
            margin-bottom: 10px;
        }

        .stat-label {
            font-size: 1rem;
            color: #666;
            font-weight: 500;
        }

        .stat-icon {
            font-size: 2rem;
            color: #667eea;
            margin-bottom: 15px;
        }

        /* ===== MOBILE MENU TOGGLE ===== */
        .mobile-menu-toggle {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            padding: 10px;
        }

        /* Controls Section */
        .controls-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .controls-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .search-filters {
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
        }

        .search-box {
            padding: 12px 15px;
            border: 2px solid #e1e8ed;
            border-radius: 10px;
            font-size: 14px;
            min-width: 250px;
            transition: border-color 0.3s ease;
        }

        .search-box:focus {
            outline: none;
            border-color: #667eea;
        }

        .filter-select {
            padding: 12px 15px;
            border: 2px solid #e1e8ed;
            border-radius: 10px;
            font-size: 14px;
            background: white;
            min-width: 150px;
            transition: border-color 0.3s ease;
        }

        .filter-select:focus {
            outline: none;
            border-color: #667eea;
        }

        .view-toggle {
            display: flex;
            background: #f8f9fa;
            border-radius: 10px;
            padding: 5px;
            gap: 5px;
        }

        .view-btn {
            padding: 10px 15px;
            border: none;
            background: transparent;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
            color: #666;
        }

        .view-btn.active {
            background: #667eea;
            color: white;
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
        }

        /* Buttons */
        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            text-align: center;
            justify-content: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }

        .btn-success {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
        }

        .btn-info {
            background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
            color: white;
        }

        .btn-warning {
            background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
            color: white;
        }

        .btn-danger {
            background: linear-gradient(135deg, #dc3545 0%, #e83e8c 100%);
            color: white;
        }

        .btn-outline {
            background: transparent;
            border: 2px solid #667eea;
            color: #667eea;
        }

        .btn-outline:hover {
            background: #667eea;
            color: white;
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
            color: white;
        }

        .form-actions {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
            margin-top: 20px;
        }

        .modal-body {
            padding: 0;
        }

        .btn-sm {
            padding: 8px 16px;
            font-size: 12px;
        }

        /* Projects Grid/List */
        .projects-content {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .projects-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }

        .projects-list {
            display: none;
        }

        .projects-list.active {
            display: block;
        }

        .projects-grid.list-view {
            display: none;
        }

        /* Project Cards */
        .project-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            border: 1px solid #e1e8ed;
            transition: all 0.3s ease;
            position: relative;
            overflow: visible;
        }

        .project-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .project-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
        }

        .project-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .project-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 5px;
        }

        .project-id {
            font-size: 0.85rem;
            color: #666;
        }

        .project-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-enviado {
            background: #e3f2fd;
            color: #1976d2;
        }

        .status-borrador {
            background: #fff3e0;
            color: #f57c00;
        }

        .status-en_revision {
            background: #f3e5f5;
            color: #7b1fa2;
        }

        .status-aprobado {
            background: #e8f5e8;
            color: #2e7d32;
        }

        .status-rechazado {
            background: #ffebee;
            color: #c62828;
        }

        .project-info {
            margin-bottom: 15px;
        }

        .info-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            font-size: 0.9rem;
        }

        .info-label {
            color: #666;
            font-weight: 500;
        }

        .info-value {
            color: #333;
            font-weight: 600;
        }

        .project-actions {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        /* ===== MODERN PROJECT CARDS ===== */
        .modern-card {
            position: relative;
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid #e1e8ed;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            overflow: hidden;
        }

        .modern-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .modern-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
        }

        .header-left {
            flex: 1;
        }

        .header-right {
            flex-shrink: 0;
        }

        .project-meta {
            display: flex;
            gap: 15px;
            margin-top: 8px;
            font-size: 0.85rem;
            color: #666;
        }

        .project-date {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .project-description {
            margin: 16px 0;
            color: #555;
            font-size: 0.9rem;
            line-height: 1.5;
            background: #f8f9fa;
            padding: 12px;
            border-radius: 8px;
            border-left: 3px solid #667eea;
        }

        .project-team {
            display: flex;
            gap: 16px;
            margin: 16px 0;
        }

        .team-member {
            display: flex;
            align-items: center;
            gap: 10px;
            flex: 1;
        }

        .member-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            color: white;
        }

        .member-avatar.student {
            background: linear-gradient(135deg, #667eea, #764ba2);
        }

        .member-avatar.director {
            background: linear-gradient(135deg, #28a745, #20c997);
        }

        .member-info {
            display: flex;
            flex-direction: column;
            min-width: 0;
        }

        .member-role {
            font-size: 0.75rem;
            color: #666;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .member-name {
            font-size: 0.9rem;
            color: #333;
            font-weight: 600;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .project-details {
            margin: 16px 0;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 8px;
            font-size: 0.85rem;
            color: #555;
        }

        .detail-item i {
            color: #667eea;
            width: 16px;
        }

        .progress-section {
            margin: 16px 0;
        }

        .progress-label {
            font-size: 0.8rem;
            color: #666;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .progress-bar {
            background: #e9ecef;
            border-radius: 10px;
            height: 8px;
            overflow: hidden;
            position: relative;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 10px;
            transition: width 0.3s ease;
        }

        .progress-text {
            font-size: 0.75rem;
            color: #667eea;
            font-weight: 600;
            margin-top: 4px;
            text-align: right;
        }

        .project-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
            padding-top: 16px;
            border-top: 1px solid #e9ecef;
        }

        .primary-actions {
            display: flex;
            gap: 8px;
        }

        .secondary-actions {
            position: relative;
        }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-toggle {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            color: #666;
        }

        .dropdown-toggle:hover {
            background: #e9ecef;
            color: #333;
        }

        .dropdown-menu {
            position: absolute;
            bottom: 100%;
            right: 0;
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
            min-width: 200px;
            z-index: 9999;
            display: none;
            overflow: visible;
            margin-bottom: 4px;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .dropdown-menu.show {
            display: block;
        }

        .dropdown-menu a {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 14px 18px;
            color: #495057;
            text-decoration: none;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s ease;
            border: none;
            background: none;
            width: 100%;
            text-align: left;
        }

        .dropdown-menu a:hover {
            background: #f8f9fa;
            color: #212529;
        }

        .dropdown-menu a i {
            width: 16px;
            text-align: center;
            font-size: 0.875rem;
        }

        .dropdown-menu a.text-danger {
            color: #dc3545;
        }

        .dropdown-menu a.text-danger:hover {
            background: #f8d7da;
            color: #721c24;
        }

        .dropdown-divider {
            height: 1px;
            background: #e9ecef;
            margin: 6px 0;
            border: none;
        }

        .dropdown {
            position: relative;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .empty-icon {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.3;
            color: #667eea;
        }

        .empty-state h3 {
            margin-bottom: 10px;
            color: #333;
        }

        .empty-state p {
            margin-bottom: 30px;
            font-size: 1.1rem;
        }

        .empty-actions {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
        }

        /* Table View */
        .projects-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        }

        .projects-table th {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            font-size: 0.9rem;
        }

        .projects-table td {
            padding: 15px;
            border-bottom: 1px solid #e1e8ed;
            font-size: 0.9rem;
        }

        .projects-table tr:hover {
            background: #f8f9fa;
        }

        /* Invitation System */
        .invitation-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 25px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .invitation-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .invitation-code {
            background: #f8f9fa;
            border: 2px dashed #667eea;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            margin-bottom: 15px;
        }

        .code-display {
            font-family: 'Courier New', monospace;
            font-size: 1.2rem;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 10px;
        }

        /* Modals */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            -webkit-backdrop-filter: blur(5px);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 30px;
            border-radius: 15px;
            width: 90%;
            max-width: 600px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid #e1e8ed;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .close {
            font-size: 2rem;
            font-weight: bold;
            color: #999;
            cursor: pointer;
            border: none;
            background: none;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .close:hover {
            color: #333;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
        }

        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e1e8ed;
            border-radius: 10px;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        .alert-warning {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }

        /* ===== RESPONSIVE DESIGN ===== */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s;
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .search-container {
                display: none;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }

            .dashboard-content {
                padding: 20px;
            }

            .mobile-menu-toggle {
                display: block;
            }

            .container {
                padding: 10px;
            }

            .header-content {
                flex-direction: column;
                align-items: flex-start;
            }

            .search-filters {
                flex-direction: column;
                align-items: stretch;
            }

            .search-box,
            .filter-select {
                min-width: auto;
                width: 100%;
            }

            .projects-grid {
                grid-template-columns: 1fr;
            }

            .modal-content {
                margin: 2% auto;
                width: 95%;
                max-height: 95vh;
                padding: 20px;
            }

            .form-row {
                grid-template-columns: 1fr;
                flex-direction: column;
            }
            
            .form-group {
                margin-bottom: 15px;
            }
        }

        @media (max-width: 480px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }

        /* ===== ANIMATIONS ===== */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .stat-card {
            animation: fadeInUp 0.6s ease-out;
        }

        .stat-card:nth-child(1) { animation-delay: 0.1s; }
        .stat-card:nth-child(2) { animation-delay: 0.2s; }
        .stat-card:nth-child(3) { animation-delay: 0.3s; }
        .stat-card:nth-child(4) { animation-delay: 0.4s; }

        .fade-in {
            animation: fadeInUp 0.6s ease-out;
        }

        /* Alertas */
        .alert {
            padding: 15px 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            border-left: 4px solid;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .alert-success {
            background: rgba(34, 197, 94, 0.1);
            border-left-color: #22c55e;
            color: #166534;
        }

        .alert-error {
            background: rgba(239, 68, 68, 0.1);
            border-left-color: #ef4444;
            color: #991b1b;
        }

        /* ===== KANBAN STYLES ===== */
        .kanban-view {
            padding: 20px 0;
        }

        .kanban-board {
            display: flex;
            gap: 20px;
            overflow-x: auto;
            padding: 20px;
            min-height: 600px;
        }

        .kanban-column {
            flex: 0 0 300px;
            background: #f8f9fa;
            border-radius: 12px;
            border: 1px solid #e9ecef;
            display: flex;
            flex-direction: column;
            max-height: 80vh;
        }

        .kanban-column-header {
            padding: 16px 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 12px 12px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .kanban-column-header h3 {
            margin: 0;
            font-size: 1rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .column-count {
            background: rgba(255, 255, 255, 0.2);
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .kanban-column-body {
            flex: 1;
            padding: 16px;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .kanban-card {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 16px;
            cursor: grab;
            transition: all 0.2s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .kanban-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            border-color: #667eea;
        }

        .kanban-card:active {
            cursor: grabbing;
        }

        .kanban-card.dragging {
            opacity: 0.5;
            transform: rotate(5deg);
        }

        .kanban-card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 12px;
        }

        .kanban-card .project-id {
            background: #e9ecef;
            color: #495057;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
        }

        .kanban-card .card-actions {
            display: flex;
            gap: 4px;
        }

        .btn-icon {
            background: none;
            border: none;
            padding: 6px;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.2s ease;
            color: #6c757d;
        }

        .btn-icon:hover {
            background: #f8f9fa;
            color: #495057;
        }

        .btn-icon.btn-success {
            color: #28a745;
        }

        .btn-icon.btn-success:hover {
            background: #d4edda;
            color: #155724;
        }

        .btn-icon.btn-danger {
            color: #dc3545;
        }

        .btn-icon.btn-danger:hover {
            background: #f8d7da;
            color: #721c24;
        }

        .kanban-card-title {
            font-size: 1rem;
            font-weight: 600;
            color: #333;
            margin: 0 0 8px 0;
            line-height: 1.4;
        }

        .kanban-card-description {
            font-size: 0.85rem;
            color: #6c757d;
            line-height: 1.4;
            margin-bottom: 12px;
        }

        .kanban-card-meta {
            display: flex;
            flex-direction: column;
            gap: 6px;
        }

        .kanban-card-meta > div {
            display: flex;
            align-items: center;
            gap: 6px;
            font-size: 0.8rem;
            color: #6c757d;
        }

        .kanban-card-meta i {
            width: 12px;
            text-align: center;
        }

        /* Drag and Drop Styles */
        .kanban-column.drag-over {
            background: #e3f2fd;
            border-color: #2196f3;
        }

        .kanban-column.drag-over .kanban-column-body {
            background: rgba(33, 150, 243, 0.1);
        }

        /* Responsive Kanban */
        @media (max-width: 768px) {
            .kanban-board {
                flex-direction: column;
                padding: 10px;
            }

            .kanban-column {
                flex: none;
                max-height: 400px;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h2>
                <i class="fas fa-cogs"></i>
                Panel Admin
            </h2>
            <div class="subtitle">Sistema de Gesti√≥n</div>
        </div>
        
        <nav class="sidebar-nav">
            <div class="nav-section">
                <div class="nav-section-title">Principal</div>
                <a href="/dashboard/admin" class="nav-item">
                    <i class="fas fa-home"></i>
                    Dashboard
                </a>
                <a href="/admin/projects" class="nav-item active">
                    <i class="fas fa-project-diagram"></i>
                    Proyectos
                    <% if (typeof projectStats !== 'undefined' && projectStats.pending > 0) { %>
                        <span class="nav-item-badge"><%= projectStats.pending %></span>
                    <% } %>
                </a>
                <a href="/admin/users" class="nav-item">
                    <i class="fas fa-users"></i>
                    Usuarios
                </a>
                <a href="/admin/roles" class="nav-item">
                    <i class="fas fa-user-shield"></i>
                    Roles
                </a>
            </div>
            
            <div class="nav-section">
                <div class="nav-section-title">Gesti√≥n</div>
                <a href="/admin/invitations" class="nav-item">
                    <i class="fas fa-envelope-open-text"></i>
                    C√≥digos de Invitaci√≥n
                </a>
                <a href="/admin/calendar" class="nav-item">
                    <i class="fas fa-calendar-alt"></i>
                    Calendario
                </a>
                <a href="/admin/reports" class="nav-item">
                    <i class="fas fa-chart-bar"></i>
                    Reportes
                </a>
                <a href="/admin/settings" class="nav-item">
                    <i class="fas fa-cog"></i>
                    Configuraci√≥n
                </a>
            </div>
            
            <div class="nav-section">
                <div class="nav-section-title">Sistema</div>
                <a href="#" class="nav-item" onclick="alert('Funci√≥n en desarrollo')">
                    <i class="fas fa-database"></i>
                    Respaldos
                </a>
                <a href="#" class="nav-item" onclick="alert('Funci√≥n en desarrollo')">
                    <i class="fas fa-file-alt"></i>
                    Logs del Sistema
                </a>
            </div>
        </nav>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Top Bar -->
        <div class="top-bar">
            <button class="mobile-menu-toggle" onclick="toggleSidebar()">
                <i class="fas fa-bars"></i>
            </button>
            
            <div class="page-title-section">
                <div class="title-and-actions">
                    <div class="title-content-with-nav">
                        <!-- Navegaci√≥n de retroceso -->
                        <nav class="back-navigation">
                            <a href="/dashboard/admin" class="back-arrow" title="Volver al dashboard">
                                <i class="fas fa-arrow-left"></i>
                            </a>
                        </nav>
                        <div class="title-content">
                            <h1 class="page-main-title">
                                <i class="fas fa-project-diagram"></i>
                                Gesti√≥n de Proyectos
                            </h1>
                            <p class="page-subtitle">Administra todos los proyectos del sistema acad√©mico</p>
                        </div>
                    </div>
                    <button class="btn btn-primary btn-new-project" onclick="openCreateModal()">
                        <i class="fas fa-plus"></i> Nuevo Proyecto
                    </button>
                </div>
            </div>
            
            <div class="user-profile">
                <div class="user-info">
                    <h4><%= (user && user.nombres) ? user.nombres + ' ' + (user.apellidos || '') : 'Usuario' %></h4>
                    <span><%= (user && user.rol_nombre) ? (((typeof user.rol_nombre === 'string') && (user.rol_nombre === 'Administrador General' || user.rol_nombre === 'Administrador' || user.rol_nombre.toLowerCase().includes('admin'))) ? 'Admin' : user.rol_nombre) : 'Admin' %></span>
                </div>
                <div class="user-avatar">
                    <%= (user && user.nombres) ? user.nombres.charAt(0).toUpperCase() : 'U' %>
                </div>
                <a href="/auth/logout" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i>
                    Salir
                </a>
            </div>
        </div>

        <!-- Projects Content -->
        <div class="dashboard-content">
            <div class="container">
                <!-- Flash Messages -->
                <% if (typeof success !== 'undefined' && success && success.length > 0) { %>
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle"></i> <%= success %>
                    </div>
                <% } %>
                <% if (typeof error !== 'undefined' && error && error.length > 0) { %>
                    <div class="alert alert-error">
                        <i class="fas fa-exclamation-circle"></i> <%= error %>
                    </div>
                <% } %>



        <!-- Statistics -->
        <div class="stats-grid fade-in">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-book"></i>
                </div>
                <div class="stat-number"><%= stats ? stats.total : 0 %></div>
                <div class="stat-label">Total Proyectos</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-chalkboard-teacher"></i>
                </div>
                <div class="stat-number"><%= stats ? stats.active : 0 %></div>
                <div class="stat-label">Proyectos Activos</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-graduation-cap"></i>
                </div>
                <div class="stat-number"><%= stats ? stats.completed : 0 %></div>
                <div class="stat-label">Completados</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-hourglass-half"></i>
                </div>
                <div class="stat-number"><%= stats ? stats.pending : 0 %></div>
                <div class="stat-label">Pendientes</div>
            </div>
        </div>

        <!-- Insights: restaurado -->
        <% 
          let avgProgress = 0;
          let totalProjects = (Array.isArray(projects) ? projects.length : 0);
          if (totalProjects > 0) {
            let sum = 0;
            projects.forEach(p => { sum += (p.progress_percent != null ? p.progress_percent : 0); });
            avgProgress = Math.round(sum / totalProjects);
          }
          const statusCounts = { borrador:0,enviado:0,en_revision:0,aprobado:0,rechazado:0,en_desarrollo:0,finalizado:0 };
          if (Array.isArray(projects)) {
            projects.forEach(p=>{ if (p.estado && statusCounts.hasOwnProperty(p.estado)) statusCounts[p.estado]++; });
          }
          const totalStatus = Object.values(statusCounts).reduce((a,b)=>a+b,0);
          const statusKeys = Object.keys(statusCounts);
        %>
        <div class="insights-section fade-in">
          <div class="insight-card radial">
            <div class="insight-title"><i class="fas fa-chart-pie"></i> Progreso promedio</div>
            <div class="radial-svg" aria-hidden="false">
              <svg viewBox="0 0 120 120" width="160" height="160" role="img" aria-label="Progreso promedio">
                <circle cx="60" cy="60" r="54" stroke="#e5e7eb" stroke-width="12" fill="none"></circle>
                <circle cx="60" cy="60" r="54" stroke="var(--accent, #16a34a)" stroke-width="12" fill="none" stroke-linecap="round" transform="rotate(-90 60 60)" stroke-dasharray="339.292" stroke-dashoffset="<%= (339.292 * (1 - (avgProgress/100))).toFixed(2) %>"></circle>
                <text x="60" y="60" dy="8" text-anchor="middle" font-weight="700" font-size="20" fill="#111827"><%= avgProgress %>%</text>
              </svg>
            </div>
          </div>
          <div class="insight-card status">
            <div class="insight-title"><i class="fas fa-chart-bar"></i> Distribuci√≥n por estado</div>
            <div class="status-bar" role="img" aria-label="Distribuci√≥n por estado">
              <% statusKeys.forEach(k => { 
                  const pct = totalStatus>0 ? Math.round((statusCounts[k]/totalStatus)*100) : 0; %>
                <div class="status-segment status-<%= k %>" style="flex: 0 0 <%= pct %>%" title="<%= k %>: <%= statusCounts[k] %> (<%= pct %>%)"></div>
              <% }) %>
            </div>
            <ul class="status-legend" aria-label="Leyenda de estados">
              <% statusKeys.forEach(k => { 
                  const pct = totalStatus>0 ? Math.round((statusCounts[k]/totalStatus)*100) : 0; %>
                <li class="legend-item"><span class="legend-dot status-<%= k %>"></span> <%= k.replace('_',' ') %> (<%= pct %>%)</li>
              <% }) %>
            </ul>
          </div>
        </div>
        <style>
        .insights-section { display:grid; grid-template-columns: repeat(2, minmax(280px, 1fr)); gap: 16px; margin-top: 16px; }
        .insight-card { background:#fff; border:1px solid #e5e7eb; border-radius:12px; padding:16px; box-shadow: 0 2px 8px rgba(0,0,0,0.06); }
        .insight-title { font-weight:600; margin-bottom:12px; display:flex; align-items:center; gap:8px; }
        .radial-svg { display:flex; align-items:center; justify-content:center; }
        .status-bar { display:flex; height:14px; border-radius:8px; overflow:hidden; background:#f3f4f6; }
        .status-segment { height:100%; }
        /* Eliminar estilos antiguos del radial basado en conic-gradient */
        .status-borrador { background:#9ca3af; }
        .status-enviado { background:#3b82f6; }
        .status-en_revision { background:#f59e0b; }
        .status-aprobado { background:#22c55e; }
        .status-rechazado { background:#ef4444; }
        .status-en_desarrollo { background:#06b6d4; }
        .status-finalizado { background:#9333ea; }
        .status-legend { display:flex; flex-wrap:wrap; gap:8px; margin-top:8px; color:#4b5563; font-size:13px; }
        .legend-item { display:inline-flex; align-items:center; gap:6px; }
        .legend-dot { display:inline-block; width:10px; height:10px; border-radius:50%; }
        .legend-dot.status-borrador { background:#9ca3af; }
        .legend-dot.status-enviado { background:#3b82f6; }
        .legend-dot.status-en_revision { background:#f59e0b; }
        .legend-dot.status-aprobado { background:#22c55e; }
        .legend-dot.status-rechazado { background:#ef4444; }
        .legend-dot.status-en_desarrollo { background:#06b6d4; }
        .legend-dot.status-finalizado { background:#9333ea; }
        </style>

        <style>
        /* Responsivo */
        @media (max-width: 1024px) {
          .insights-section { grid-template-columns: 1fr; }
          .insight-card { padding:14px; }
          .radial { width:140px; height:140px; }
          .radial-center { inset:22px; font-size:18px; }
          .status-legend { font-size:12px; }
        }
        @media (max-width: 640px) {
           .insights-section { gap:12px; margin-top:12px; }
           .insight-title { font-size:14px; }
           .radial-svg svg { width:120px; height:120px; }
           .status-bar { height:12px; display:flex; flex-wrap:wrap; }
           .status-segment { min-width:8px; }
           .legend-item { font-size:12px; }
         }
         </style>

        <!-- Advanced Controls Section -->
        <div class="controls-section fade-in" style="margin-top: 20px;">
            <div class="controls-header">
                <div class="search-filters">
                    <!-- B√∫squeda en tiempo real -->
                    <div class="search-container-advanced">
                        <i class="fas fa-search"></i>
                        <input type="text" class="search-box" placeholder="üîç Buscar por t√≠tulo, estudiante, director..." 
                               value="<%= search || '' %>" oninput="handleRealTimeSearch(this.value)" id="searchInput">
                        <div class="search-suggestions" id="searchSuggestions" style="display: none;"></div>
                    </div>
                    
                    <!-- Filtros avanzados -->
                    <div class="filters-row">
                        <select class="filter-select" onchange="applyFilters()" id="statusFilter">
                            <option value="">üìã Todos los estados</option>
                            <option value="borrador" <%= statusFilter === 'borrador' ? 'selected' : '' %>>üìù Borrador</option>
                            <option value="enviado" <%= statusFilter === 'enviado' ? 'selected' : '' %>>üì§ Enviado</option>
                            <option value="en_revision" <%= statusFilter === 'en_revision' ? 'selected' : '' %>>üëÄ En Revisi√≥n</option>
                            <option value="aprobado" <%= statusFilter === 'aprobado' ? 'selected' : '' %>>‚úÖ Aprobado</option>
                            <option value="rechazado" <%= statusFilter === 'rechazado' ? 'selected' : '' %>>‚ùå Rechazado</option>
                            <option value="en_desarrollo" <%= statusFilter === 'en_desarrollo' ? 'selected' : '' %>>üöÄ En Desarrollo</option>
                            <option value="finalizado" <%= statusFilter === 'finalizado' ? 'selected' : '' %>>üèÜ Finalizado</option>
                        </select>
                        
                        <select class="filter-select" onchange="applyFilters()" id="lineaFilter">
                            <option value="">üî¨ Todas las l√≠neas</option>
                            <% if (typeof lineasInvestigacion !== 'undefined' && lineasInvestigacion) { %>
                                <% lineasInvestigacion.forEach(linea => { %>
                                    <option value="<%= linea.id %>" <%= lineaFilter == linea.id ? 'selected' : '' %>>
                                        <%= linea.nombre %>
                                    </option>
                                <% }) %>
                            <% } %>
                        </select>
                        
                        <!-- Filtro por fecha -->
                        <select class="filter-select" onchange="applyFilters()" id="dateFilter">
                            <option value="">üìÖ Todas las fechas</option>
                            <option value="today">Hoy</option>
                            <option value="week">Esta semana</option>
                            <option value="month">Este mes</option>
                            <option value="year">Este a√±o</option>
                        </select>
                        
                        <!-- Ordenamiento -->
                        <select class="filter-select" onchange="applySorting()" id="sortFilter">
                            <option value="created_desc">üïí M√°s recientes</option>
                            <option value="created_asc">üïí M√°s antiguos</option>
                            <option value="title_asc">üî§ T√≠tulo A-Z</option>
                            <option value="title_desc">üî§ T√≠tulo Z-A</option>
                            <option value="status_asc">üìä Estado A-Z</option>
                        </select>
                    </div>
                    
                    <!-- Acciones de filtros -->
                    <div class="filter-actions">
                        <button class="btn btn-outline" onclick="clearFilters()">
                            <i class="fas fa-times"></i> Limpiar
                        </button>
                        <button class="btn btn-outline" onclick="toggleAdvancedFilters()">
                            <i class="fas fa-filter"></i> Filtros Avanzados
                        </button>
                        <button class="btn btn-success" onclick="exportProjects()">
                            <i class="fas fa-download"></i> Exportar
                        </button>
                    </div>
                </div>
                
                <!-- Controles de vista y acciones -->
                <div class="view-controls">

                    
                    <div class="view-toggle">
                        <button class="view-btn active" onclick="toggleView('grid')" id="gridBtn" title="Vista de tarjetas">
                            <i class="fas fa-th"></i>
                        </button>
                        <button class="view-btn" onclick="toggleView('list')" id="listBtn" title="Vista de lista">
                            <i class="fas fa-list"></i>
                        </button>

                    </div>
                </div>
            </div>
            
            <!-- Filtros avanzados colapsables -->
            <div class="advanced-filters" id="advancedFilters" style="display: none;">
                <div class="filters-grid">
                    <div class="filter-group">
                        <label>Rango de fechas:</label>
                        <div class="date-range">
                            <input type="date" id="startDate" class="form-control">
                            <span>hasta</span>
                            <input type="date" id="endDate" class="form-control">
                        </div>
                    </div>
                    
                    <div class="filter-group">
                        <label>Director espec√≠fico:</label>
                        <select class="form-control" id="directorFilter">
                            <option value="">Todos los directores</option>
                            <!-- Se llenar√° din√°micamente -->
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label>Estudiante espec√≠fico:</label>
                        <select class="form-control" id="estudianteFilter">
                            <option value="">Todos los estudiantes</option>
                            <!-- Se llenar√° din√°micamente -->
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label>Progreso del proyecto:</label>
                        <select class="form-control" id="progressFilter">
                            <option value="">Cualquier progreso</option>
                            <option value="0-25">0% - 25%</option>
                            <option value="26-50">26% - 50%</option>
                            <option value="51-75">51% - 75%</option>
                            <option value="76-100">76% - 100%</option>
                        </select>
                    </div>
                </div>
                
                <div class="advanced-actions">
                    <button class="btn btn-primary" onclick="applyAdvancedFilters()">
                        <i class="fas fa-search"></i> Aplicar Filtros
                    </button>
                    <button class="btn btn-secondary" onclick="resetAdvancedFilters()">
                        <i class="fas fa-undo"></i> Resetear
                    </button>
                </div>
            </div>
        </div>



        <!-- Projects Content -->
        <div class="projects-content fade-in">
            <!-- Grid View -->
            <div class="projects-grid" id="gridView">
                <% if (projects && projects.length > 0) { %>
                    <% projects.forEach(project => { %>
                        <div class="project-card modern-card" data-project-id="<%= project.id %>">

                            
                            <!-- Header con estado y prioridad -->
                            <div class="project-header">
                                <div class="header-left">
                                    <div class="project-title" title="<%= project.titulo %>">
                                        <%= project.titulo.length > 50 ? project.titulo.substring(0, 50) + '...' : project.titulo %>
                                    </div>
                                    <div class="project-meta">
                                        <span class="project-id">ID: <%= project.id %></span>
                                        <span class="project-date">
                                            <i class="fas fa-calendar"></i>
                                            <%= project.fecha_creacion ? new Date(project.fecha_creacion).toLocaleDateString() : 'Sin fecha' %>
                                        </span>
                                    </div>
                                </div>
                                <div class="header-right">
                                    <div class="project-status status-<%= project.estado %>">
                                        <% if (project.estado === 'borrador') { %>
                                            <i class="fas fa-book"></i> Borrador
                                        <% } else if (project.estado === 'enviado') { %>
                                            <i class="fas fa-paper-plane"></i> Enviado
                                        <% } else if (project.estado === 'en_revision') { %>
                                            <i class="fas fa-chalkboard-teacher"></i> En Revisi√≥n
                                        <% } else if (project.estado === 'aprobado') { %>
                                            <i class="fas fa-graduation-cap"></i> Aprobado
                                        <% } else if (project.estado === 'rechazado') { %>
                                            <i class="fas fa-times-circle"></i> Rechazado
                                        <% } else if (project.estado === 'en_desarrollo') { %>
                                            <i class="fas fa-book-open"></i> En Desarrollo
                                        <% } else if (project.estado === 'finalizado') { %>
                                            <i class="fas fa-certificate"></i> Finalizado
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Descripci√≥n del proyecto -->
                            <div class="project-description">
                                <%= project.descripcion ? (project.descripcion.length > 120 ? project.descripcion.substring(0, 120) + '...' : project.descripcion) : 'Sin descripci√≥n disponible' %>
                            </div>
                            
                            <!-- Informaci√≥n del equipo -->
                            <!-- Informaci√≥n del equipo se muestra en la p√°gina de detalles del proyecto -->
                            
                            <!-- Informaci√≥n adicional -->
                            <div class="project-details">
                                <div class="detail-item">
                                    <i class="fas fa-microscope"></i>
                                    <span><%= project.linea_investigacion || 'L√≠nea no especificada' %></span>
                                </div>
                                <% if (project.fecha_inicio || project.fecha_fin) { %>
                                <div class="detail-item">
                                    <i class="fas fa-clock"></i>
                                    <span>
                                        <%= project.fecha_inicio ? new Date(project.fecha_inicio).toLocaleDateString() : '?' %> - 
                                        <%= project.fecha_fin ? new Date(project.fecha_fin).toLocaleDateString() : '?' %>
                                    </span>
                                </div>
                                <% } %>
                            </div>
                            
                            <!-- Barra de progreso basada en tareas completadas -->
                            <div class="progress-section">
                                <div class="progress-label">Progreso del proyecto</div>
                                <div class="progress-bar">
                                    <div class="progress-fill" style="width: <%= (project.progress_percent != null ? project.progress_percent : 0) %>%"></div>
                                </div>
                                <div class="progress-text">
                                    <%= (project.progress_percent != null ? project.progress_percent : 0) %>%
                                </div>
                            </div>
                            
                            <!-- Acciones del proyecto -->
                            <div class="project-actions">
                                <div class="primary-actions">
                                    <button class="btn btn-primary btn-sm" data-project-id="<%= project.id %>" onclick="viewProject(this.dataset.projectId)" title="Ver detalles">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-warning btn-sm" data-project-id="<%= project.id %>" onclick="editProject(this.dataset.projectId)" title="Editar">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <% if (project.estado === 'enviado' || project.estado === 'en_revision') { %>
                                        <button class="btn btn-success btn-sm" data-project-id="<%= project.id %>" onclick="approveProject(this.dataset.projectId)" title="Aprobar">
                                            <i class="fas fa-check"></i>
                                        </button>
                                        <button class="btn btn-danger btn-sm" data-project-id="<%= project.id %>" onclick="rejectProject(this.dataset.projectId)" title="Rechazar">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    <% } %>
                                </div>
                                
                                <div class="secondary-actions">
                                    <div class="dropdown">
                                        <button class="btn btn-outline btn-sm dropdown-toggle" onclick="toggleDropdown(this)">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <div class="dropdown-menu">

                                            <a href="#" onclick="duplicateProject(<%= project.id %>)">
                                                <i class="fas fa-copy"></i> Duplicar proyecto
                                            </a>
                                            <a href="#" onclick="exportProject(<%= project.id %>)">
                                                <i class="fas fa-download"></i> Exportar
                                            </a>
                                            <div class="dropdown-divider"></div>
                                            <a href="#" onclick="deleteProject(<%= project.id %>)" class="text-danger">
                                                <i class="fas fa-trash"></i> Eliminar definitivamente
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <div class="empty-state">
                        <div class="empty-icon">
                            <i class="fas fa-folder-open"></i>
                        </div>
                        <h3>No hay proyectos disponibles</h3>
                        <p>Comienza creando tu primer proyecto o ajusta los filtros de b√∫squeda</p>
                        <div class="empty-actions">
                            <button class="btn btn-primary" onclick="openCreateModal()">
                                <i class="fas fa-plus"></i> Crear Proyecto
                            </button>
                            <button class="btn btn-outline" onclick="clearFilters()">
                                <i class="fas fa-filter"></i> Limpiar Filtros
                            </button>
                        </div>
                    </div>
                <% } %>
            </div>

            <!-- List View -->
            <div class="projects-list" id="listView">
                <table class="projects-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>T√≠tulo</th>
                            <th>L√≠nea de Investigaci√≥n</th>
                            <th>Estado</th>
                            <th>Fecha Creaci√≥n</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (projects && projects.length > 0) { %>
                            <% projects.forEach(project => { %>
                                <tr>
                                    <td><%= project.id %></td>
                                    <td><%= project.titulo %></td>
                                    <td><%= project.linea_investigacion || 'No especificada' %></td>
                                    <td>
                                        <span class="project-status status-<%= project.estado %>">
                                            <%= project.estado %>
                                        </span>
                                    </td>
                                    <td><%= new Date(project.fecha_creacion).toLocaleDateString() %></td>
                                    <td>
                                        <button class="btn btn-primary btn-sm" data-project-id="<%= project.id %>" onclick="viewProject(this.dataset.projectId)" title="Ver proyecto">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button class="btn btn-warning btn-sm" data-project-id="<%= project.id %>" onclick="editProject(this.dataset.projectId)" title="Editar proyecto">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <% if (project.estado === 'enviado' || project.estado === 'en_revision') { %>
                                            <button class="btn btn-success btn-sm" data-project-id="<%= project.id %>" onclick="approveProject(this.dataset.projectId)" title="Aprobar proyecto">
                                                <i class="fas fa-check"></i>
                                            </button>
                                            <button class="btn btn-danger btn-sm" data-project-id="<%= project.id %>" onclick="rejectProject(this.dataset.projectId)" title="Rechazar proyecto">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        <% } %>

                                        <button class="btn btn-danger btn-sm" data-project-id="<%= project.id %>" onclick="deleteProject(this.dataset.projectId)" title="Eliminar proyecto definitivamente">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="8" style="text-align: center; padding: 40px; color: #666;">
                                    <i class="fas fa-folder-open" style="font-size: 2rem; margin-bottom: 15px; opacity: 0.5;"></i>
                                    <div>No hay proyectos disponibles</div>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>

            <!-- Kanban View -->
            <div class="kanban-view" id="kanbanView" style="display: none;">
                <div class="kanban-board">
                    <!-- Columna Borrador -->
                    <div class="kanban-column" data-status="borrador">
                        <div class="kanban-column-header">
                            <h3><i class="fas fa-edit"></i> Borrador</h3>
                            <span class="column-count">
                                <%= projects ? projects.filter(p => p.estado === 'borrador').length : 0 %>
                            </span>
                        </div>
                        <div class="kanban-column-body">
                            <% if (projects && projects.length > 0) { %>
                                <% projects.filter(project => project.estado === 'borrador').forEach(project => { %>
                                    <div class="kanban-card" data-project-id="<%= project.id %>" draggable="true">
                                        <div class="kanban-card-header">
                                            <span class="project-id">#<%= project.id %></span>
                                            <div class="card-actions">
                                                <button class="btn-icon" onclick="viewProject(<%= project.id %>)" title="Ver">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn-icon" onclick="editProject(<%= project.id %>)" title="Editar">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <h4 class="kanban-card-title"><%= project.titulo %></h4>
                                        <p class="kanban-card-description"><%= project.descripcion ? project.descripcion.substring(0, 100) + '...' : 'Sin descripci√≥n' %></p>
                                        <div class="kanban-card-meta">
                                            <div class="date">
                                                <i class="fas fa-calendar"></i>
                                                <span><%= new Date(project.fecha_creacion).toLocaleDateString() %></span>
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            <% } %>
                        </div>
                    </div>

                    <!-- Columna Enviado -->
                    <div class="kanban-column" data-status="enviado">
                        <div class="kanban-column-header">
                            <h3><i class="fas fa-paper-plane"></i> Enviado</h3>
                            <span class="column-count">
                                <%= projects ? projects.filter(p => p.estado === 'enviado').length : 0 %>
                            </span>
                        </div>
                        <div class="kanban-column-body">
                            <% if (projects && projects.length > 0) { %>
                                <% projects.filter(project => project.estado === 'enviado').forEach(project => { %>
                                    <div class="kanban-card" data-project-id="<%= project.id %>" draggable="true">
                                        <div class="kanban-card-header">
                                            <span class="project-id">#<%= project.id %></span>
                                            <div class="card-actions">
                                                <button class="btn-icon" onclick="viewProject(<%= project.id %>)" title="Ver">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn-icon btn-success" onclick="approveProject(<%= project.id %>)" title="Aprobar">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                                <button class="btn-icon btn-danger" onclick="rejectProject(<%= project.id %>)" title="Rechazar">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <h4 class="kanban-card-title"><%= project.titulo %></h4>
                                        <p class="kanban-card-description"><%= project.descripcion ? project.descripcion.substring(0, 100) + '...' : 'Sin descripci√≥n' %></p>
                                        <div class="kanban-card-meta">
                                            <div class="date">
                                                <i class="fas fa-calendar"></i>
                                                <span><%= new Date(project.fecha_creacion).toLocaleDateString() %></span>
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            <% } %>
                        </div>
                    </div>

                    <!-- Columna En Revisi√≥n -->
                    <div class="kanban-column" data-status="en_revision">
                        <div class="kanban-column-header">
                            <h3><i class="fas fa-search"></i> En Revisi√≥n</h3>
                            <span class="column-count">
                                <%= projects ? projects.filter(p => p.estado === 'en_revision').length : 0 %>
                            </span>
                        </div>
                        <div class="kanban-column-body">
                            <% if (projects && projects.length > 0) { %>
                                <% projects.filter(project => project.estado === 'en_revision').forEach(project => { %>
                                    <div class="kanban-card" data-project-id="<%= project.id %>" draggable="true">
                                        <div class="kanban-card-header">
                                            <span class="project-id">#<%= project.id %></span>
                                            <div class="card-actions">
                                                <button class="btn-icon" onclick="viewProject(<%= project.id %>)" title="Ver">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn-icon btn-success" onclick="approveProject(<%= project.id %>)" title="Aprobar">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                                <button class="btn-icon btn-danger" onclick="rejectProject(<%= project.id %>)" title="Rechazar">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <h4 class="kanban-card-title"><%= project.titulo %></h4>
                                        <p class="kanban-card-description"><%= project.descripcion ? project.descripcion.substring(0, 100) + '...' : 'Sin descripci√≥n' %></p>
                                        <div class="kanban-card-meta">
                                            <div class="date">
                                                <i class="fas fa-calendar"></i>
                                                <span><%= new Date(project.fecha_creacion).toLocaleDateString() %></span>
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            <% } %>
                        </div>
                    </div>

                    <!-- Columna Aprobado -->
                    <div class="kanban-column" data-status="aprobado">
                        <div class="kanban-column-header">
                            <h3><i class="fas fa-check-circle"></i> Aprobado</h3>
                            <span class="column-count">
                                <%= projects ? projects.filter(p => p.estado === 'aprobado').length : 0 %>
                            </span>
                        </div>
                        <div class="kanban-column-body">
                            <% if (projects && projects.length > 0) { %>
                                <% projects.filter(project => project.estado === 'aprobado').forEach(project => { %>
                                    <div class="kanban-card" data-project-id="<%= project.id %>" draggable="true">
                                        <div class="kanban-card-header">
                                            <span class="project-id">#<%= project.id %></span>
                                            <div class="card-actions">
                                                <button class="btn-icon" onclick="viewProject(<%= project.id %>)" title="Ver">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn-icon" onclick="editProject(<%= project.id %>)" title="Editar">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <h4 class="kanban-card-title"><%= project.titulo %></h4>
                                        <p class="kanban-card-description"><%= project.descripcion ? project.descripcion.substring(0, 100) + '...' : 'Sin descripci√≥n' %></p>
                                        <div class="kanban-card-meta">
                                            <div class="date">
                                                <i class="fas fa-calendar"></i>
                                                <span><%= new Date(project.fecha_creacion).toLocaleDateString() %></span>
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            <% } %>
                        </div>
                    </div>

                    <!-- Columna Rechazado -->
                    <div class="kanban-column" data-status="rechazado">
                        <div class="kanban-column-header">
                            <h3><i class="fas fa-times-circle"></i> Rechazado</h3>
                            <span class="column-count">
                                <%= projects ? projects.filter(p => p.estado === 'rechazado').length : 0 %>
                            </span>
                        </div>
                        <div class="kanban-column-body">
                            <% if (projects && projects.length > 0) { %>
                                <% projects.filter(project => project.estado === 'rechazado').forEach(project => { %>
                                    <div class="kanban-card" data-project-id="<%= project.id %>" draggable="true">
                                        <div class="kanban-card-header">
                                            <span class="project-id">#<%= project.id %></span>
                                            <div class="card-actions">
                                                <button class="btn-icon" onclick="viewProject(<%= project.id %>)" title="Ver">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn-icon" onclick="editProject(<%= project.id %>)" title="Editar">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <h4 class="kanban-card-title"><%= project.titulo %></h4>
                                        <p class="kanban-card-description"><%= project.descripcion ? project.descripcion.substring(0, 100) + '...' : 'Sin descripci√≥n' %></p>
                                        <div class="kanban-card-meta">
                                            <div class="date">
                                                <i class="fas fa-calendar"></i>
                                                <span><%= new Date(project.fecha_creacion).toLocaleDateString() %></span>
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
            </div>
        </div>
    </div>

    <!-- Create/Edit Project Modal -->
    <div id="projectModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Nuevo Proyecto</h2>
                <button class="close" onclick="closeModal('projectModal')">&times;</button>
            </div>
            <form id="projectForm" onsubmit="saveProject(event)">
                <input type="hidden" id="projectId" name="projectId">
                
                <div class="form-group">
                    <label class="form-label" for="titulo">T√≠tulo del Proyecto</label>
                    <input type="text" class="form-control" id="titulo" name="titulo" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="descripcion">Descripci√≥n</label>
                    <textarea class="form-control" id="descripcion" name="descripcion" rows="4" required></textarea>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" for="linea_investigacion_id">L√≠nea de Investigaci√≥n</label>
                        <select class="form-control" id="linea_investigacion_id" name="linea_investigacion_id">
                            <option value="">Seleccionar l√≠nea</option>
                            <% if (typeof lineasInvestigacion !== 'undefined' && lineasInvestigacion) { %>
                                <% lineasInvestigacion.forEach(linea => { %>
                                    <option value="<%= linea.id %>"><%= linea.nombre %></option>
                                <% }) %>
                            <% } %>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="ciclo_academico_id">Ciclo Acad√©mico</label>
                        <select class="form-control" id="ciclo_academico_id" name="ciclo_academico_id" required>
                            <option value="">Seleccionar ciclo</option>
                            <% if (typeof ciclosAcademicos !== 'undefined' && ciclosAcademicos) { %>
                                <% ciclosAcademicos.forEach(ciclo => { %>
                                    <option value="<%= ciclo.id %>"><%= ciclo.nombre %></option>
                                <% }) %>
                            <% } %>
                        </select>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" for="estado">Estado</label>
                        <select class="form-control" id="estado" name="estado">
                            <option value="borrador">Borrador</option>
                            <option value="enviado">Enviado</option>
                            <option value="en_revision">En Revisi√≥n</option>
                            <option value="aprobado">Aprobado</option>
                            <option value="rechazado">Rechazado</option>
                            <option value="en_desarrollo">En Desarrollo</option>
                            <option value="finalizado">Finalizado</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label class="form-label" for="fecha_inicio">Fecha de Inicio</label>
                        <input type="date" class="form-control" id="fecha_inicio" name="fecha_inicio" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="fecha_fin">Fecha de Fin</label>
                        <input type="date" class="form-control" id="fecha_fin" name="fecha_fin" required>
                    </div>
                </div>

                <div style="display: flex; gap: 15px; justify-content: flex-end; margin-top: 30px;">
                    <button type="button" class="btn btn-outline" onclick="closeModal('projectModal')">
                        <i class="fas fa-times"></i> Cancelar
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Guardar Proyecto
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // View Toggle
        function toggleView(view) {
            const gridView = document.getElementById('gridView');
            const listView = document.getElementById('listView');
            const kanbanView = document.getElementById('kanbanView');
            const gridBtn = document.getElementById('gridBtn');
            const listBtn = document.getElementById('listBtn');
            const kanbanBtn = document.getElementById('kanbanBtn');
            
            // Hide all views
            gridView.style.display = 'none';
            listView.style.display = 'none';
            if (kanbanView) kanbanView.style.display = 'none';
            
            // Remove active class from all buttons
            gridBtn.classList.remove('active');
            listBtn.classList.remove('active');
            if (kanbanBtn) kanbanBtn.classList.remove('active');
            
            // Show selected view
            if (view === 'grid') {
                gridView.style.display = 'grid';
                gridBtn.classList.add('active');
            } else if (view === 'list') {
                listView.style.display = 'block';
                listBtn.classList.add('active');
            } else if (view === 'kanban' && kanbanView) {
                kanbanView.style.display = 'block';
                kanbanBtn.classList.add('active');
                initializeKanban();
            }
        }



        // Advanced Filters
        function toggleAdvancedFilters() {
            const advancedFilters = document.getElementById('advancedFilters');
            const toggleBtn = document.querySelector('.toggle-advanced-btn');
            
            if (advancedFilters.style.display === 'none' || !advancedFilters.style.display) {
                advancedFilters.style.display = 'block';
                toggleBtn.innerHTML = '<i class="fas fa-chevron-up"></i> Ocultar Filtros Avanzados';
            } else {
                advancedFilters.style.display = 'none';
                toggleBtn.innerHTML = '<i class="fas fa-chevron-down"></i> Mostrar Filtros Avanzados';
            }
        }

        // Real-time Search
        let searchTimeout;
        function handleRealTimeSearch(value) {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                applyFilters();
            }, 500);
        }

        // Export Functions
        function exportProjects(format = 'excel') {
            const params = new URLSearchParams(window.location.search);
            params.append('export', format);
            
            window.open(`/admin/projects/export?${params.toString()}`, '_blank');
        }

        // Load dynamic filter options
        function loadFilterOptions() {
            // Load directors
            fetch('/admin/api/users?role=director')
                .then(response => response.json())
                .then(data => {
                    const directorSelect = document.getElementById('directorFilter');
                    if (Array.isArray(data)) {
                        data.forEach(user => {
                            const option = document.createElement('option');
                            option.value = user.id;
                            option.textContent = `${user.nombre} ${user.apellido}`;
                            directorSelect.appendChild(option);
                        });
                    }
                })
                .catch(error => console.error('Error loading directors:', error));

            // Load students
            fetch('/admin/api/users?role=student')
                .then(response => response.json())
                .then(data => {
                    const studentSelect = document.getElementById('estudianteFilter');
                    if (Array.isArray(data)) {
                        data.forEach(user => {
                            const option = document.createElement('option');
                            option.value = user.id;
                            option.textContent = `${user.nombre} ${user.apellido}`;
                            studentSelect.appendChild(option);
                        });
                    }
                })
                .catch(error => console.error('Error loading students:', error));
        }

        // Kanban View
        function initializeKanban() {
            console.log('Initializing Kanban view...');
            
            const kanbanCards = document.querySelectorAll('.kanban-card');
            const kanbanColumns = document.querySelectorAll('.kanban-column');
            
            // Add drag event listeners to cards
            kanbanCards.forEach(card => {
                card.addEventListener('dragstart', handleDragStart);
                card.addEventListener('dragend', handleDragEnd);
            });
            
            // Add drop event listeners to columns
            kanbanColumns.forEach(column => {
                column.addEventListener('dragover', handleDragOver);
                column.addEventListener('drop', handleDrop);
                column.addEventListener('dragenter', handleDragEnter);
                column.addEventListener('dragleave', handleDragLeave);
            });
        }

        let draggedElement = null;

        function handleDragStart(e) {
            draggedElement = this;
            this.classList.add('dragging');
            e.dataTransfer.effectAllowed = 'move';
            e.dataTransfer.setData('text/html', this.outerHTML);
        }

        function handleDragEnd(e) {
            this.classList.remove('dragging');
            draggedElement = null;
        }

        function handleDragOver(e) {
            if (e.preventDefault) {
                e.preventDefault();
            }
            e.dataTransfer.dropEffect = 'move';
            return false;
        }

        function handleDragEnter(e) {
            this.classList.add('drag-over');
        }

        function handleDragLeave(e) {
            this.classList.remove('drag-over');
        }

        function handleDrop(e) {
            if (e.stopPropagation) {
                e.stopPropagation();
            }

            this.classList.remove('drag-over');

            if (draggedElement !== this) {
                const projectId = draggedElement.getAttribute('data-project-id');
                const newStatus = this.getAttribute('data-status');
                
                // Update project status via API
                updateProjectStatus(projectId, newStatus);
                
                // Move the card visually
                const columnBody = this.querySelector('.kanban-column-body');
                columnBody.appendChild(draggedElement);
                
                // Update column counts
                updateColumnCounts();
            }

            return false;
        }

        function updateProjectStatus(projectId, newStatus) {
            fetch(`/admin/projects/${projectId}/status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ estado: newStatus })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('Project status updated successfully');
                    // Show success notification
                    showNotification('Estado del proyecto actualizado exitosamente', 'success');
                } else {
                    console.error('Error updating project status:', data.message);
                    showNotification('Error al actualizar el estado del proyecto', 'error');
                    // Revert the visual change
                    location.reload();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Error al actualizar el estado del proyecto', 'error');
                // Revert the visual change
                location.reload();
            });
        }

        function updateColumnCounts() {
            const columns = document.querySelectorAll('.kanban-column');
            columns.forEach(column => {
                const cards = column.querySelectorAll('.kanban-card');
                const countElement = column.querySelector('.column-count');
                if (countElement) {
                    countElement.textContent = cards.length;
                }
            });
        }

        function showNotification(message, type) {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = `alert alert-${type === 'success' ? 'success' : 'error'}`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                ${message}
            `;
            
            // Add to page
            const container = document.querySelector('.main-content');
            container.insertBefore(notification, container.firstChild);
            
            // Remove after 3 seconds
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Search and Filter
        function handleSearch(event) {
            if (event.key === 'Enter') {
                applyFilters();
            }
        }

        function applyFilters() {
            const search = document.querySelector('.search-box').value;
            const status = document.getElementById('statusFilter').value;
            const linea = document.getElementById('lineaFilter').value;
            const sortBy = document.getElementById('sortFilter').value;
            const dateFilter = document.getElementById('dateFilter').value;
            
            // Advanced filters
            const dateFrom = document.getElementById('startDate')?.value;
            const dateTo = document.getElementById('endDate')?.value;
            const director = document.getElementById('directorFilter')?.value;
            const estudiante = document.getElementById('estudianteFilter')?.value;
            const progreso = document.getElementById('progressFilter')?.value;
            
            const params = new URLSearchParams();
            if (search) params.append('search', search);
            if (status) params.append('status', status);
            if (linea) params.append('linea', linea);
            if (sortBy) params.append('sort', sortBy);
            if (dateFilter) params.append('dateFilter', dateFilter);
            if (dateFrom) params.append('dateFrom', dateFrom);
            if (dateTo) params.append('dateTo', dateTo);
            if (director) params.append('director', director);
            if (estudiante) params.append('estudiante', estudiante);
            if (progreso) params.append('progreso', progreso);
            
            window.location.href = '/admin/projects?' + params.toString();
        }

        function applyAdvancedFilters() {
            applyFilters();
        }

        function resetAdvancedFilters() {
            document.getElementById('startDate').value = '';
            document.getElementById('endDate').value = '';
            document.getElementById('directorFilter').value = '';
            document.getElementById('estudianteFilter').value = '';
            document.getElementById('progressFilter').value = '';
            applyFilters();
        }

        function applySorting() {
            applyFilters();
        }

        function clearFilters() {
            window.location.href = '/admin/projects';
        }

        // Project Management
        function openCreateModal() {
            window.location.href = '/admin/projects/new';
        }

        function editProject(id) {
            // Cambiar la URL para usar la API
            fetch(`/admin/projects/${id}/api`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const project = data.project;
                    
                    // Llenar el formulario con los datos del proyecto
                    document.getElementById('modalTitle').textContent = 'Editar Proyecto';
                    document.getElementById('projectId').value = project.id;
                    document.getElementById('titulo').value = project.titulo;
                    document.getElementById('descripcion').value = project.descripcion;
                    document.getElementById('linea_investigacion_id').value = project.linea_investigacion_id;
                    document.getElementById('ciclo_academico_id').value = project.ciclo_academico_id;
                    document.getElementById('estado').value = project.estado;
                    
                    // Cargar las fechas si existen
                    if (project.fecha_inicio) {
                        document.getElementById('fecha_inicio').value = project.fecha_inicio.split('T')[0]; // Formato YYYY-MM-DD
                    }
                    if (project.fecha_fin) {
                        document.getElementById('fecha_fin').value = project.fecha_fin.split('T')[0]; // Formato YYYY-MM-DD
                    }
                    
                    // Mostrar el modal
                    document.getElementById('projectModal').style.display = 'block';
                } else {
                    alert('Error al cargar los datos del proyecto');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error al cargar los datos del proyecto');
            });
        }

        function viewProject(id) {
            window.location.href = `/admin/projects/${id}/details`;
        }

        function deleteProject(id) {
            if (confirm('¬øEst√°s seguro de que deseas eliminar DEFINITIVAMENTE este proyecto? Esta acci√≥n no se puede deshacer y se perder√°n todos los datos asociados.')) {
                fetch(`/admin/projects/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error al eliminar el proyecto');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al eliminar el proyecto');
                });
            }
        }

        function approveProject(projectId) {
            if (confirm('¬øEst√°s seguro de que quieres aprobar este proyecto?')) {
                fetch(`/admin/projects/${projectId}/status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ estado: 'aprobado' })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Proyecto aprobado exitosamente');
                        location.reload();
                    } else {
                        alert('Error al aprobar el proyecto: ' + (data.message || 'Error desconocido'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al aprobar el proyecto');
                });
            }
        }

        function rejectProject(projectId) {
            if (confirm('¬øEst√°s seguro de que quieres rechazar este proyecto?')) {
                fetch(`/admin/projects/${projectId}/status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ estado: 'rechazado' })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Proyecto rechazado');
                        location.reload();
                    } else {
                        alert('Error al rechazar el proyecto: ' + (data.message || 'Error desconocido'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al rechazar el proyecto');
                });
            }
        }



        function saveProject(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            const projectId = formData.get('projectId');
            
            // Convertir FormData a objeto JSON
            const projectData = {
                titulo: formData.get('titulo'),
                descripcion: formData.get('descripcion'),
                linea_investigacion_id: formData.get('linea_investigacion_id'),
                ciclo_academico_id: formData.get('ciclo_academico_id'),
                estado: formData.get('estado') || 'borrador',
                fecha_inicio: formData.get('fecha_inicio'),
                fecha_fin: formData.get('fecha_fin')
            };
            
            const url = projectId ? `/admin/projects/${projectId}` : '/admin/projects';
            const method = projectId ? 'PUT' : 'POST';
            
            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(projectData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    closeModal('projectModal');
                    location.reload();
                } else {
                    alert('Error al guardar el proyecto: ' + (data.message || 'Error desconocido'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error al guardar el proyecto');
            });
        }

        // Modal Management
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }



        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('open');
        }

        // Cerrar sidebar al hacer clic fuera en m√≥vil
        document.addEventListener('click', function(event) {
            const sidebar = document.getElementById('sidebar');
            const toggleBtn = document.querySelector('.mobile-menu-toggle');
            
            if (window.innerWidth <= 768 && 
                !sidebar.contains(event.target) && 
                !toggleBtn.contains(event.target) && 
                sidebar.classList.contains('open')) {
                sidebar.classList.remove('open');
            }
        });

        // Dropdown functionality
        function toggleDropdown(button) {
            const dropdown = button.nextElementSibling;
            const isOpen = dropdown.style.display === 'block';
            
            // Close all other dropdowns
            document.querySelectorAll('.dropdown-menu').forEach(menu => {
                menu.style.display = 'none';
            });
            
            // Toggle current dropdown
            dropdown.style.display = isOpen ? 'none' : 'block';
        }
        
        // Close dropdowns when clicking outside
        document.addEventListener('click', function(event) {
            if (!event.target.closest('.dropdown')) {
                document.querySelectorAll('.dropdown-menu').forEach(menu => {
                    menu.style.display = 'none';
                });
            }
        });

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modals = document.querySelectorAll('.modal');
            modals.forEach(modal => {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        }

        // Add fade-in animation to elements
        document.addEventListener('DOMContentLoaded', function() {
            const elements = document.querySelectorAll('.fade-in');
            elements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, index * 100);
            });
            
            // Initialize dynamic filters
            loadFilterOptions();

            // Insights removidos: inicializaci√≥n deshabilitada

        });
    </script>
</body>
</html>