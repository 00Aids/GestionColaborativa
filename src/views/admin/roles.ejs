<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Roles - Administrador | Sistema de Gestión</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/dashboard.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* ===== SIDEBAR MODERNO ===== */
        .sidebar {
            position: fixed;
            left: 0;
            top: 0;
            width: 280px;
            height: 100vh;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            padding: 0;
            box-shadow: 4px 0 20px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            transition: all 0.3s ease;
            border-right: 1px solid rgba(255, 255, 255, 0.2);
        }

        .sidebar-header {
            padding: 30px 25px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .sidebar-header h2 {
            font-size: 22px;
            font-weight: 700;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .sidebar-header .subtitle {
            font-size: 12px;
            opacity: 0.8;
            margin-top: 5px;
            font-weight: 400;
        }

        .sidebar-nav {
            padding: 20px 0;
            height: calc(100vh - 120px);
            overflow-y: auto;
        }

        .nav-section {
            margin-bottom: 25px;
        }

        .nav-section-title {
            font-size: 11px;
            font-weight: 600;
            color: #94a3b8;
            text-transform: uppercase;
            letter-spacing: 1px;
            padding: 0 25px 8px;
            margin-bottom: 8px;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 12px 25px;
            color: #64748b;
            text-decoration: none;
            transition: all 0.3s ease;
            font-weight: 500;
            font-size: 14px;
            border-left: 3px solid transparent;
        }

        .nav-item i {
            width: 20px;
            margin-right: 12px;
            font-size: 16px;
        }

        .nav-item:hover {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
            color: #667eea;
            border-left: 3px solid #667eea;
            transform: translateX(2px);
        }

        .nav-item.active {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.15) 0%, rgba(118, 75, 162, 0.15) 100%);
            color: #667eea;
            border-left: 3px solid #667eea;
            font-weight: 600;
        }

        .nav-item-badge {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
            font-size: 10px;
            padding: 3px 7px;
            border-radius: 12px;
            margin-left: auto;
            font-weight: 600;
            box-shadow: 0 2px 8px rgba(239, 68, 68, 0.3);
        }

        /* ===== MAIN CONTENT ===== */
        .main-content {
            margin-left: 280px;
            min-height: 100vh;
        }

        /* ===== TOP BAR ===== */
        .top-bar {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 20px 40px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        .search-container {
            position: relative;
            flex: 1;
            max-width: 400px;
            margin: 0 30px;
        }

        .search-input {
            width: 100%;
            padding: 12px 20px 12px 45px;
            border: none;
            border-radius: 25px;
            background: rgba(255, 255, 255, 0.9);
            font-size: 14px;
            outline: none;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            background: white;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

        .search-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #64748b;
            font-size: 16px;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .user-info {
            text-align: right;
            color: white;
        }

        .user-info h4 {
            margin: 0;
            font-size: 14px;
            font-weight: 600;
        }

        .user-info span {
            font-size: 12px;
            opacity: 0.8;
        }

        .user-avatar {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 16px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .user-avatar:hover {
            border-color: white;
            transform: scale(1.05);
        }

        /* ===== CONTENT AREA ===== */
        .content-area {
            padding: 40px;
        }

        /* ===== BREADCRUMB ===== */
        .breadcrumb {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 30px;
            font-size: 14px;
        }

        .breadcrumb a {
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .breadcrumb a:hover {
            color: white;
        }

        .breadcrumb .separator {
            color: rgba(255, 255, 255, 0.5);
        }

        .breadcrumb .current {
            color: white;
            font-weight: 600;
        }

        /* ===== FLASH MESSAGES ===== */
        .flash-message {
            padding: 16px 20px;
            border-radius: 12px;
            margin-bottom: 25px;
            display: flex;
            align-items: center;
            gap: 12px;
            font-weight: 500;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .flash-success {
            background: rgba(34, 197, 94, 0.15);
            color: #22c55e;
            border-color: rgba(34, 197, 94, 0.3);
        }

        .flash-error {
            background: rgba(239, 68, 68, 0.15);
            color: #ef4444;
            border-color: rgba(239, 68, 68, 0.3);
        }

        /* ===== PAGE HEADER ===== */
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
        }

        .page-title {
            color: white;
            font-size: 32px;
            font-weight: 700;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .page-title i {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 15px;
            border-radius: 50%;
            color: white;
            font-size: 20px;
        }

        .page-actions {
            display: flex;
            gap: 15px;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 12px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: rgba(255, 255, 255, 0.9);
            color: #374151;
            backdrop-filter: blur(10px);
        }

        .btn-secondary:hover {
            background: white;
            transform: translateY(-2px);
        }

        /* ===== ROLES STATS ===== */
        .roles-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 25px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        }

        .stat-number {
            font-size: 36px;
            font-weight: 700;
            color: #1e293b;
            margin-bottom: 8px;
        }

        .stat-label {
            color: #64748b;
            font-weight: 500;
            font-size: 14px;
        }

        .stat-icon {
            float: right;
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
        }

        /* ===== INFO GRID ===== */
        .info-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 40px;
        }

        .info-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .info-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 20px;
        }

        .info-title {
            font-size: 20px;
            font-weight: 700;
            color: #1e293b;
            margin: 0;
        }

        .info-content {
            color: #64748b;
            line-height: 1.6;
        }

        .info-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .info-list li {
            padding: 8px 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .info-list li:last-child {
            border-bottom: none;
        }

        .permission-badge {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        /* ===== MAIN SECTION ===== */
        .main-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .section-header h3 {
            font-size: 24px;
            font-weight: 700;
            color: #1e293b;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        /* ===== ROLES LIST ===== */
        .roles-list {
            display: grid;
            gap: 20px;
        }

        .role-item {
            background: rgba(255, 255, 255, 0.8);
            border: 1px solid rgba(0, 0, 0, 0.1);
            border-radius: 16px;
            padding: 25px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .role-item:hover {
            background: rgba(255, 255, 255, 0.95);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .role-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 24px;
            flex-shrink: 0;
        }

        .role-info {
            flex: 1;
        }

        .role-info h4 {
            font-size: 18px;
            font-weight: 700;
            color: #1e293b;
            margin: 0 0 8px 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .protected-badge {
            background: #fbbf24;
            color: #92400e;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 10px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .role-details {
            color: #64748b;
            font-size: 14px;
            margin-bottom: 12px;
        }

        .user-count {
            display: flex;
            align-items: center;
            gap: 6px;
            color: #64748b;
            font-size: 13px;
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            margin-left: auto;
        }

        .status-badge.active {
            background: #dcfce7;
            color: #166534;
        }

        .status-badge.inactive {
            background: #fef2f2;
            color: #dc2626;
        }

        .role-actions {
            display: flex;
            gap: 8px;
            margin-left: 20px;
        }

        .action-btn {
            padding: 8px 12px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 600;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .action-btn.edit {
            background: #dbeafe;
            color: #1d4ed8;
        }

        .action-btn.edit:hover {
            background: #3b82f6;
            color: white;
        }

        .action-btn.toggle {
            background: #fef3c7;
            color: #d97706;
        }

        .action-btn.toggle:hover {
            background: #f59e0b;
            color: white;
        }

        .action-btn.delete {
            background: #fecaca;
            color: #dc2626;
        }

        .action-btn.delete:hover {
            background: #ef4444;
            color: white;
        }

        /* ===== MODAL ===== */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
            z-index: 2000;
            animation: fadeIn 0.3s ease;
        }

        .modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            border-radius: 20px;
            width: 90%;
            max-width: 800px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            animation: slideUp 0.3s ease;
        }

        .modal-header {
            padding: 30px 30px 0 30px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            font-size: 24px;
            font-weight: 700;
            color: #1e293b;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            color: #64748b;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .modal-close:hover {
            background: #f1f5f9;
            color: #1e293b;
        }

        .modal-body {
            padding: 30px;
        }

        /* ===== FORM STYLES ===== */
        .form-group {
            margin-bottom: 25px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: #f9fafb;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-textarea {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: #f9fafb;
            resize: vertical;
            min-height: 100px;
        }

        .form-textarea:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        /* ===== PERMISSIONS GRID ===== */
        .permissions-section {
            margin-top: 30px;
        }

        .permissions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }

        .permission-item {
            background: #f8fafc;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            padding: 16px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .permission-item:hover {
            background: #f1f5f9;
            border-color: #cbd5e1;
        }

        .permission-item.selected {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
            border-color: #667eea;
        }

        .permission-checkbox {
            display: none;
        }

        .permission-label {
            display: flex;
            align-items: flex-start;
            gap: 12px;
            cursor: pointer;
        }

        .permission-icon {
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 16px;
            flex-shrink: 0;
        }

        .permission-info {
            flex: 1;
        }

        .permission-name {
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 4px;
        }

        .permission-description {
            font-size: 13px;
            color: #64748b;
            line-height: 1.4;
        }

        /* ===== MODAL FOOTER ===== */
        .modal-footer {
            padding: 20px 30px 30px 30px;
            border-top: 1px solid rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: flex-end;
            gap: 15px;
        }

        .btn-cancel {
            background: #f1f5f9;
            color: #64748b;
            border: 1px solid #e2e8f0;
        }

        .btn-cancel:hover {
            background: #e2e8f0;
            color: #475569;
        }

        .btn-save {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-save:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        /* ===== LOADING STATES ===== */
        .loading {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 40px;
            color: #64748b;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f4f6;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 15px;
        }

        /* ===== EMPTY STATE ===== */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #64748b;
        }

        .empty-icon {
            font-size: 48px;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        /* ===== ANIMATIONS ===== */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* ===== RESPONSIVE DESIGN ===== */
        @media (max-width: 1024px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .info-grid {
                grid-template-columns: 1fr;
            }

            .roles-stats {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            }
        }

        @media (max-width: 768px) {
            .content-area {
                padding: 20px;
            }

            .page-header {
                flex-direction: column;
                gap: 20px;
                text-align: center;
            }

            .page-actions {
                width: 100%;
                justify-content: center;
            }

            .roles-stats {
                grid-template-columns: 1fr;
            }

            .permissions-grid {
                grid-template-columns: 1fr;
            }

            .modal-content {
                width: 95%;
                margin: 20px;
            }

            .role-item {
                flex-direction: column;
                text-align: center;
            }

            .role-actions {
                margin-left: 0;
                justify-content: center;
            }
        }

        /* ===== MOBILE MENU TOGGLE ===== */
        .mobile-menu-toggle {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            padding: 10px;
        }

        @media (max-width: 1024px) {
            .mobile-menu-toggle {
                display: block;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h2>
                <i class="fas fa-cogs"></i>
                Panel Admin
            </h2>
            <div class="subtitle">Sistema de Gestión</div>
        </div>
        
        <nav class="sidebar-nav">
            <div class="nav-section">
                <div class="nav-section-title">Principal</div>
                <a href="/dashboard/admin" class="nav-item">
                    <i class="fas fa-home"></i>
                    Dashboard
                </a>
                <a href="/admin/projects" class="nav-item">
                    <i class="fas fa-project-diagram"></i>
                    Proyectos
                </a>
                <a href="/admin/users" class="nav-item">
                    <i class="fas fa-users"></i>
                    Usuarios
                </a>
                <a href="/admin/roles" class="nav-item active">
                    <i class="fas fa-user-shield"></i>
                    Roles
                </a>
            </div>
            
            <div class="nav-section">
                <div class="nav-section-title">Gestión</div>
                <a href="/admin/invitations" class="nav-item">
                    <i class="fas fa-envelope-open-text"></i>
                    Códigos de Invitación
                </a>
                <a href="/admin/calendar" class="nav-item">
                    <i class="fas fa-calendar-alt"></i>
                    Calendario
                </a>
                <a href="/admin/reports" class="nav-item">
                    <i class="fas fa-chart-bar"></i>
                    Reportes
                </a>
                <a href="/admin/settings" class="nav-item">
                    <i class="fas fa-cog"></i>
                    Configuración
                </a>
            </div>
            
            <div class="nav-section">
                <div class="nav-section-title">Sistema</div>
                <a href="#" class="nav-item" onclick="alert('Función en desarrollo')">
                    <i class="fas fa-database"></i>
                    Respaldos
                </a>
                <a href="#" class="nav-item" onclick="alert('Función en desarrollo')">
                    <i class="fas fa-file-alt"></i>
                    Logs del Sistema
                </a>
            </div>
        </nav>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Top Bar -->
        <div class="top-bar">
            <button class="mobile-menu-toggle" onclick="toggleSidebar()">
                <i class="fas fa-bars"></i>
            </button>
            
            <div class="search-container">
                <i class="fas fa-search search-icon"></i>
                <input type="text" class="search-input" placeholder="Buscar roles, permisos...">
            </div>
            
            <div class="user-profile">
                <div class="user-info">
                    <h4><%= (user && user.nombres) ? user.nombres + ' ' + (user.apellidos || '') : 'Usuario' %></h4>
                    <span><%= (user && user.rol_nombre) ? (((typeof user.rol_nombre === 'string') && (user.rol_nombre === 'Administrador General' || user.rol_nombre === 'Administrador' || user.rol_nombre.toLowerCase().includes('admin'))) ? 'Admin' : user.rol_nombre) : 'Admin' %></span>
                </div>
                <div class="user-avatar">
                    <%= (user && user.nombres) ? user.nombres.charAt(0).toUpperCase() : 'U' %>
                </div>
            </div>
        </div>

        <!-- Content Area -->
        <div class="content-area">
            <!-- Breadcrumb -->
            <nav class="breadcrumb">
                <a href="/dashboard/admin">
                    <i class="fas fa-home"></i>
                    Dashboard
                </a>
                <span class="separator">/</span>
                <span class="current">Gestión de Roles</span>
            </nav>

            <!-- Flash Messages -->
            <% const successMsg = Array.isArray(success) ? success[0] : success; %>
            <% if (successMsg && typeof successMsg === 'string' && successMsg.trim().length > 0) { %>
                <div class="flash-message flash-success">
                    <i class="fas fa-check-circle"></i>
                    <%= successMsg %>
                </div>
            <% } %>
            <% const errorMsg = Array.isArray(error) ? error[0] : error; %>
            <% if (errorMsg && typeof errorMsg === 'string' && errorMsg.trim().length > 0) { %>
                <div class="flash-message flash-error">
                    <i class="fas fa-exclamation-circle"></i>
                    <%= errorMsg %>
                </div>
            <% } %>

            <!-- Page Header -->
            <div class="page-header">
                <h1 class="page-title">
                    <i class="fas fa-user-shield"></i>
                    Gestión de Roles
                </h1>
                <div class="page-actions">
                    <button class="btn btn-primary" onclick="openCreateModal()">
                        <i class="fas fa-plus"></i>
                        Crear Nuevo Rol
                    </button>
                    <a href="/dashboard/admin" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i>
                        Volver al Dashboard
                    </a>
                </div>
            </div>

            <!-- Roles Statistics -->
            <div class="roles-stats">
                <div class="stat-card">
                    <div class="stat-number"><%= roleStats.total %></div>
                    <div class="stat-label">Total de Roles</div>
                    <div class="stat-icon">
                        <i class="fas fa-user-shield"></i>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-number"><%= roleStats.active %></div>
                    <div class="stat-label">Roles Activos</div>
                    <div class="stat-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-number"><%= roleStats.inactive %></div>
                    <div class="stat-label">Roles Inactivos</div>
                    <div class="stat-icon">
                        <i class="fas fa-times-circle"></i>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-number"><%= roleStats.withUsers %></div>
                    <div class="stat-label">Roles con Usuarios</div>
                    <div class="stat-icon">
                        <i class="fas fa-users"></i>
                    </div>
                </div>
            </div>

            <!-- Information Grid -->
            <div class="info-grid">
                <div class="info-card">
                    <div class="info-header">
                        <i class="fas fa-info-circle" style="color: #667eea; font-size: 24px;"></i>
                        <h3 class="info-title">Funciones del Sistema</h3>
                    </div>
                    <div class="info-content">
                        <ul class="info-list">
                            <li><i class="fas fa-check" style="color: #22c55e;"></i> Gestión completa de roles y permisos</li>
                            <li><i class="fas fa-check" style="color: #22c55e;"></i> Asignación dinámica de permisos</li>
                            <li><i class="fas fa-check" style="color: #22c55e;"></i> Control de acceso granular</li>
                            <li><i class="fas fa-check" style="color: #22c55e;"></i> Auditoría de cambios</li>
                        </ul>
                        <p style="margin-top: 15px; font-size: 13px; color: #f59e0b;">
                            <i class="fas fa-exclamation-triangle"></i>
                            <strong>Nota:</strong> El rol "Administrador General" no puede ser eliminado ni modificado.
                        </p>
                    </div>
                </div>

                <div class="info-card">
                    <div class="info-header">
                        <i class="fas fa-shield-alt" style="color: #667eea; font-size: 24px;"></i>
                        <h3 class="info-title">Permisos del Sistema</h3>
                    </div>
                    <div class="info-content">
                        <p style="margin-bottom: 15px;">Permisos disponibles en el sistema:</p>
                        <ul class="info-list">
                            <% availablePermissions.forEach(permission => { %>
                                <li>
                                    <span class="permission-badge"><%= permission %></span>
                                </li>
                            <% }); %>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Roles List -->
            <div class="main-section">
                <div class="section-header">
                    <h3>
                        <i class="fas fa-list"></i>
                        Lista de Roles
                    </h3>
                </div>

                <div class="filters-bar" style="display:flex; gap:12px; align-items:center; margin-bottom:16px; background:rgba(255,255,255,0.6); border:1px solid rgba(2,6,23,0.08); padding:12px 16px; border-radius:12px;">
                    <div style="display:flex; align-items:center; gap:8px;">
                        <i class="fas fa-filter" style="color:#64748b;"></i>
                        <span style="font-size:13px; color:#0f172a; font-weight:600;">Filtros:</span>
                    </div>
                    <label for="filterStatus" style="font-size:12px; color:#334155;">Estado</label>
                    <select id="filterStatus" style="appearance:none; background:rgba(2,6,23,0.04); border:1px solid rgba(2,6,23,0.08); padding:8px 10px; border-radius:8px; font-size:12px; color:#0f172a;">
                        <option value="all">Todos</option>
                        <option value="active">Activos</option>
                        <option value="inactive">Inactivos</option>
                    </select>
                    <label for="filterAssignment" style="font-size:12px; color:#334155;">Asignación</label>
                    <select id="filterAssignment" style="appearance:none; background:rgba(2,6,23,0.04); border:1px solid rgba(2,6,23,0.08); padding:8px 10px; border-radius:8px; font-size:12px; color:#0f172a;">
                        <option value="all">Todos</option>
                        <option value="with">Con usuarios</option>
                        <option value="without">Sin usuarios</option>
                    </select>
                    <div style="margin-left:auto; display:flex; align-items:center; gap:6px; color:#64748b; font-size:12px;">
                        <i class="fas fa-lightbulb" style="color:#f59e0b;"></i>
                        <span>Analiza la salud de los roles desde una perspectiva académica.</span>
                    </div>
                </div>

                <div class="roles-list">
                    <% roles.forEach(function(role){ %>
                        <div class="role-item" data-role-id="<%= role.id %>" data-status="<%= role.activo ? 'active' : 'inactive' %>" data-users="<%= (userCounts && userCounts[role.id]) ? userCounts[role.id] : 0 %>">
                            <div class="role-icon">
                                <% 
                                    const iconClass = (role.nombre === 'Administrador General') ? 'fa-crown' :
                                                      (role.nombre && role.nombre.toLowerCase().includes('director')) ? 'fa-chalkboard-teacher' :
                                                      (role.nombre && (role.nombre.toLowerCase().includes('estudiante') || role.nombre.toLowerCase().includes('student'))) ? 'fa-user-graduate' :
                                                      (role.nombre && role.nombre.toLowerCase().includes('coordinador')) ? 'fa-user-tie' :
                                                      (role.nombre && role.nombre.toLowerCase().includes('evaluador')) ? 'fa-clipboard-check' :
                                                      'fa-book';
                                %>
                                <i class="fas <%= iconClass %>"></i>
                            </div>
                            <div class="role-info">
                                <h4>
                                    <%= role.nombre %>
                                    <% if (role.nombre === 'Administrador General') { %>
                                        <span class="protected-badge" title="Rol protegido">Protegido</span>
                                    <% } %>
                                </h4>
                                <div class="role-details"><%= role.descripcion || 'Sin descripción' %></div>
                                <div class="user-count"><i class="fas fa-users"></i> Usuarios asignados: <%= (userCounts && userCounts[role.id]) ? userCounts[role.id] : 0 %></div>
                            </div>
                            <span class="status-badge <%= role.activo ? 'active' : 'inactive' %>"><%= role.activo ? 'Activo' : 'Inactivo' %></span>
                            <div class="role-actions">
                                <button class="action-btn edit" onclick="openEditModal(<%= role.id %>)" data-tooltip="Editar rol">
                                    <i class="fas fa-edit"></i>
                                    Editar
                                </button>
                                <button class="action-btn toggle" onclick="toggleRoleStatus(<%= role.id %>, <%= !!role.activo %>)" data-tooltip="<%= role.activo ? 'Desactivar' : 'Activar' %>">
                                    <i class="fas <%= role.activo ? 'fa-pause' : 'fa-play' %>"></i>
                                    <%= role.activo ? 'Desactivar' : 'Activar' %>
                                </button>
                                <% if (role.nombre !== 'Administrador General') { %>
                                    <button class="action-btn delete" onclick="deleteRole(<%= role.id %>)" data-tooltip="Eliminar rol">
                                        <i class="fas fa-trash-alt"></i>
                                        Eliminar
                                    </button>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para Crear/Editar Rol -->
    <div class="modal" id="roleModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">
                    <i class="fas fa-user-shield"></i>
                    Crear Nuevo Rol
                </h2>
                <button class="modal-close" onclick="closeModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <form id="roleForm">
                    <input type="hidden" id="roleId" name="roleId">
                    
                    <div class="form-group">
                        <label class="form-label" for="roleName">Nombre del Rol *</label>
                        <input type="text" id="roleName" name="nombre" class="form-input" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="roleDescription">Descripción</label>
                        <textarea id="roleDescription" name="descripcion" class="form-textarea" placeholder="Describe las responsabilidades de este rol..."></textarea>
                    </div>
                    
                    <div class="permissions-section">
                        <label class="form-label">Permisos del Rol</label>
                        <div class="permissions-grid" id="permissionsGrid">
                            <% availablePermissions.forEach(permission => { %>
                                <div class="permission-item" onclick="togglePermission('<%= permission %>')">
                                    <input type="checkbox" class="permission-checkbox" id="perm_<%= permission %>" name="permisos[]" value="<%= permission %>">
                                    <label class="permission-label" for="perm_<%= permission %>">
                                        <div class="permission-icon">
                                            <i class="fas fa-shield-alt"></i>
                                        </div>
                                        <div class="permission-info">
                                            <div class="permission-name"><%= permission %></div>
                                            <div class="permission-description">Permite <%= permission.toLowerCase().replace('_', ' ') %></div>
                                        </div>
                                    </label>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel" onclick="closeModal()">
                    <i class="fas fa-times"></i>
                    Cancelar
                </button>
                <button type="submit" form="roleForm" class="btn btn-save">
                    <i class="fas fa-save"></i>
                    Guardar Rol
                </button>
            </div>
        </div>
    </div>

    <script>
        // Variables globales
        let currentRoleId = null;
        let isEditing = false;

        // Función para alternar permisos
        function togglePermission(permission) {
            const checkbox = document.getElementById(`perm_${permission}`);
            const item = checkbox.closest('.permission-item');
            
            checkbox.checked = !checkbox.checked;
            
            if (checkbox.checked) {
                item.classList.add('selected');
            } else {
                item.classList.remove('selected');
            }
        }

        // Función para abrir modal de creación
        function openCreateModal() {
            isEditing = false;
            currentRoleId = null;
            
            document.getElementById('modalTitle').innerHTML = '<i class="fas fa-user-shield"></i> Crear Nuevo Rol';
            document.getElementById('roleForm').reset();
            
            // Limpiar selecciones de permisos
            document.querySelectorAll('.permission-item').forEach(item => {
                item.classList.remove('selected');
                item.querySelector('.permission-checkbox').checked = false;
            });
            
            document.getElementById('roleModal').classList.add('show');
        }

        // Función para abrir modal de edición
        function openEditModal(roleId) {
            isEditing = true;
            currentRoleId = roleId;
            
            document.getElementById('modalTitle').innerHTML = '<i class="fas fa-edit"></i> Editar Rol';
            
            // Obtener datos del rol
            fetch(`/admin/roles/${roleId}/details`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const role = data.role;
                        
                        document.getElementById('roleId').value = role.id;
                        document.getElementById('roleName').value = role.nombre;
                        document.getElementById('roleDescription').value = role.descripcion || '';
                        
                        // Limpiar y marcar permisos
                        document.querySelectorAll('.permission-item').forEach(item => {
                            item.classList.remove('selected');
                            item.querySelector('.permission-checkbox').checked = false;
                        });
                        
                        if (role.permisos) {
                            let permisosArray = [];
                            if (Array.isArray(role.permisos)) {
                                permisosArray = role.permisos;
                            } else if (typeof role.permisos === 'string') {
                                try {
                                    const parsed = JSON.parse(role.permisos);
                                    permisosArray = Array.isArray(parsed) ? parsed : Object.keys(parsed || {});
                                } catch (e) {
                                    permisosArray = [];
                                }
                            } else {
                                permisosArray = Object.keys(role.permisos || {});
                            }

                            permisosArray.forEach(permission => {
                                const checkbox = document.getElementById(`perm_${permission}`);
                                if (checkbox) {
                                    checkbox.checked = true;
                                    checkbox.closest('.permission-item').classList.add('selected');
                                }
                            });
                        }
                        
                        document.getElementById('roleModal').classList.add('show');
                    } else {
                        alert('Error al cargar los datos del rol');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al cargar los datos del rol');
                });
        }

        // Función para cerrar modal
        function closeModal() {
            document.getElementById('roleModal').classList.remove('show');
        }

        // Función para cambiar estado del rol
        function toggleRoleStatus(roleId, currentStatus) {
            const action = currentStatus ? 'desactivar' : 'activar';
            if (confirm(`¿Estás seguro de que quieres ${action} este rol?`)) {
                fetch(`/admin/roles/${roleId}/toggle-status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Buscar la tarjeta del rol
                        const card = Array.from(document.querySelectorAll('.role-item')).find(el => {
                            const editBtn = el.querySelector('.action-btn.edit');
                            return editBtn && editBtn.getAttribute('onclick')?.includes(`(${roleId})`);
                        });
                        if (card) {
                            const statusBadge = card.querySelector('.status-badge');
                            const toggleBtn = card.querySelector('.action-btn.toggle');
                            const toggleIcon = toggleBtn.querySelector('i');
                            const newActive = !!data.newStatus;
                            statusBadge.textContent = newActive ? 'Activo' : 'Inactivo';
                            statusBadge.classList.toggle('active', newActive);
                            statusBadge.classList.toggle('inactive', !newActive);
                            toggleBtn.setAttribute('onclick', `toggleRoleStatus(${roleId}, ${newActive})`);
                            toggleBtn.innerHTML = `${newActive ? '<i class=\"fas fa-pause\"></i> Desactivar' : '<i class=\"fas fa-play\"></i> Activar'}`;
                            card.style.transition = 'transform 200ms ease, box-shadow 200ms ease';
                            card.style.transform = 'scale(1.01)';
                            card.style.boxShadow = '0 12px 28px rgba(2,6,23,0.10)';
                            setTimeout(()=>{ card.style.transform='scale(1)'; card.style.boxShadow=''; }, 220);
                            // Reaplicar filtros
                            applyRoleFilters();
                        }
                        // Opcional: actualizar métricas si existen contenedores
                        const activeCountEl = document.querySelector('.roles-stats .stat-card:nth-child(2) .stat-number');
                        const inactiveCountEl = document.querySelector('.roles-stats .stat-card:nth-child(3) .stat-number');
                        if (activeCountEl && inactiveCountEl) {
                            let active = parseInt(activeCountEl.textContent, 10);
                            let inactive = parseInt(inactiveCountEl.textContent, 10);
                            const prevActive = !!currentStatus;
                            const newActive = !!data.newStatus;
                            if (newActive && !prevActive) { active += 1; inactive = Math.max(0, inactive - 1); }
                            else if (!newActive && prevActive) { active = Math.max(0, active - 1); inactive += 1; }
                            activeCountEl.textContent = active;
                            inactiveCountEl.textContent = inactive;
                        }
                    } else {
                        alert(data.error || data.message || 'Error al cambiar el estado del rol');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al cambiar el estado del rol');
                });
            }
        }

        // Función para eliminar rol
        function deleteRole(roleId) {
            if (confirm('¿Estás seguro de que quieres eliminar este rol? Esta acción no se puede deshacer.')) {
                fetch(`/admin/roles/${roleId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message || 'Error al eliminar el rol');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al eliminar el rol');
                });
            }
        }

        // Función para toggle sidebar en móvil
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('open');
        }

        // Manejar envío del formulario
        document.getElementById('roleForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const roleData = {
                nombre: formData.get('nombre'),
                descripcion: formData.get('descripcion'),
                permisos: formData.getAll('permisos[]')
            };
            
            const url = isEditing ? `/admin/roles/${currentRoleId}` : '/admin/roles';
            const method = isEditing ? 'PUT' : 'POST';
            
            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(roleData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Error al guardar el rol');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error al guardar el rol');
            });
        });

        // Cerrar modal al hacer clic fuera
        document.getElementById('roleModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        // Cerrar sidebar al hacer clic fuera en móvil
        document.addEventListener('click', function(event) {
            const sidebar = document.getElementById('sidebar');
            const toggle = document.querySelector('.mobile-menu-toggle');
            
            if (window.innerWidth <= 1024 && 
                !sidebar.contains(event.target) && 
                !toggle.contains(event.target)) {
                sidebar.classList.remove('open');
            }
        });

        // Función para envío de búsqueda
        const searchInputEl = document.querySelector('.search-input');
        if (searchInputEl) {
            searchInputEl.addEventListener('input', function(e) {
                const query = e.target.value.toLowerCase();
                const roleItems = document.querySelectorAll('.role-item');
                
                roleItems.forEach(item => {
                    const roleName = item.querySelector('h4').textContent.toLowerCase();
                    const roleDescription = item.querySelector('.role-details').textContent.toLowerCase();
                    
                    if (roleName.includes(query) || roleDescription.includes(query)) {
                        item.style.display = 'flex';
                    } else {
                        item.style.display = 'none';
                    }
                });
            });
        }
    </script>



            <script>
            // Cerrar modal al hacer clic fuera en móvil
        document.addEventListener('click', function(event) {
            const sidebar = document.getElementById('sidebar');
            const toggle = document.querySelector('.mobile-menu-toggle');
            
            if (window.innerWidth <= 1024 && 
                !sidebar.contains(event.target) && 
                !toggle.contains(event.target)) {
                sidebar.classList.remove('open');
            }
        });

        // Función para envío de búsqueda
        document.querySelector('.search-input').addEventListener('input', function(e) {
            const query = e.target.value.toLowerCase();
            const roleItems = document.querySelectorAll('.role-item');
            
            roleItems.forEach(item => {
                const roleName = item.querySelector('h4').textContent.toLowerCase();
                const roleDescription = item.querySelector('.role-details').textContent.toLowerCase();
                
                if (roleName.includes(query) || roleDescription.includes(query)) {
                    item.style.display = 'flex';
                } else {
                    item.style.display = 'none';
                }
            });
        });

        // Aplicar filtros de estado y asignación de usuarios
        function applyRoleFilters() {
            const statusFilter = document.getElementById('filterStatus')?.value || 'all';
            const assignmentFilter = document.getElementById('filterAssignment')?.value || 'all';
            const items = document.querySelectorAll('.role-item');
            
            items.forEach(item => {
                const status = item.getAttribute('data-status');
                const users = parseInt(item.getAttribute('data-users') || '0', 10);
                
                let visible = true;
                if (statusFilter !== 'all') {
                    visible = visible && (status === statusFilter);
                }
                if (assignmentFilter === 'with') {
                    visible = visible && users > 0;
                } else if (assignmentFilter === 'without') {
                    visible = visible && users === 0;
                }
                item.style.display = visible ? 'flex' : 'none';
            });
        }
        document.getElementById('filterStatus')?.addEventListener('change', applyRoleFilters);
        document.getElementById('filterAssignment')?.addEventListener('change', applyRoleFilters);
        applyRoleFilters();
    </script>
    </body>
    </html>