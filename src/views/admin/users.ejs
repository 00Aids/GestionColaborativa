<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Usuarios - Sistema Académico</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* ===== SIDEBAR MODERNO ===== */
        .sidebar {
            position: fixed;
            left: 0;
            top: 0;
            width: 280px;
            height: 100vh;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            padding: 0;
            box-shadow: 4px 0 20px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            transition: all 0.3s ease;
            border-right: 1px solid rgba(255, 255, 255, 0.2);
        }

        .sidebar-header {
            padding: 30px 25px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .sidebar-header h2 {
            font-size: 22px;
            font-weight: 700;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .sidebar-header .subtitle {
            font-size: 12px;
            opacity: 0.8;
            margin-top: 5px;
            font-weight: 400;
        }

        .sidebar-nav {
            padding: 20px 0;
            height: calc(100vh - 120px);
            overflow-y: auto;
        }

        .nav-section {
            margin-bottom: 25px;
        }

        .nav-section-title {
            font-size: 11px;
            font-weight: 600;
            color: #94a3b8;
            text-transform: uppercase;
            letter-spacing: 1px;
            padding: 0 25px 8px;
            margin-bottom: 8px;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 12px 25px;
            color: #64748b;
            text-decoration: none;
            transition: all 0.3s ease;
            font-weight: 500;
            font-size: 14px;
            border-left: 3px solid transparent;
        }

        .nav-item i {
            width: 20px;
            margin-right: 12px;
            font-size: 16px;
        }

        .nav-item:hover {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            border-left-color: #667eea;
        }

        .nav-item.active {
            background: rgba(102, 126, 234, 0.15);
            color: #667eea;
            border-left-color: #667eea;
            font-weight: 600;
        }

        .nav-item-badge {
            background: #ef4444;
            color: white;
            font-size: 10px;
            padding: 2px 6px;
            border-radius: 10px;
            margin-left: auto;
            font-weight: 600;
        }

        /* ===== MAIN CONTENT ===== */
        .main-content {
            margin-left: 280px;
            min-height: 100vh;
            background: transparent;
        }

        .top-bar {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 20px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        .mobile-menu-toggle {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 18px;
            cursor: pointer;
            padding: 8px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .mobile-menu-toggle:hover {
            background: rgba(255, 255, 255, 0.1);
        }

        @media (max-width: 768px) {
            .mobile-menu-toggle {
                display: block;
            }
        }

        .page-title-section {
            flex: 1;
            text-align: center;
            margin: 0 20px;
        }
        
        .page-main-title {
            color: white;
            font-size: 24px;
            font-weight: 600;
            margin: 0;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        .page-subtitle {
            color: rgba(255, 255, 255, 0.8);
            font-size: 14px;
            margin: 5px 0 0 0;
            font-weight: 400;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 15px;
            color: white;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            border: 2px solid rgba(255, 255, 255, 0.3);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .user-avatar:hover {
            border-color: white;
            transform: scale(1.05);
        }

        .user-info h4 {
            font-size: 14px;
            font-weight: 600;
            margin: 0;
        }

        .user-info span {
            font-size: 12px;
            opacity: 0.8;
        }

        .logout-btn {
            background: rgba(239, 68, 68, 0.2);
            color: white;
            border: 1px solid rgba(239, 68, 68, 0.3);
            padding: 8px 15px;
            border-radius: 20px;
            text-decoration: none;
            font-size: 12px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .logout-btn:hover {
            background: #ef4444;
            color: white;
            text-decoration: none;
        }

        /* ===== DASHBOARD CONTENT ===== */
        .dashboard-content {
            padding: 30px;
        }

        .page-header {
            margin-bottom: 30px;
        }

        .page-title {
            font-size: 28px;
            font-weight: 700;
            color: white;
            margin-bottom: 8px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .page-subtitle {
            color: rgba(255, 255, 255, 0.8);
            font-size: 16px;
            font-weight: 400;
        }

        /* ===== STATS GRID ===== */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 25px;
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.3);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: white;
            margin-bottom: 15px;
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        }
        .bg-indigo { background: linear-gradient(135deg, #2b4c7e 0%, #1b2a49 100%); }
        .bg-gold { background: linear-gradient(135deg, #f2c94c 0%, #f2994a 100%); }
        .bg-green { background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); }

        .stat-number {
            font-size: 32px;
            font-weight: 700;
            color: #1e293b;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #64748b;
            font-size: 14px;
            font-weight: 500;
        }

        /* ===== MOBILE MENU TOGGLE ===== */
        .mobile-menu-toggle {
            display: none;
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            padding: 10px;
        }

        /* ===== RESPONSIVE DESIGN ===== */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s;
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .search-container {
                display: none;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }

            .dashboard-content {
                padding: 20px;
            }

            .mobile-menu-toggle {
                display: block;
            }
        }

        @media (max-width: 480px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }

        /* ===== CONTENT STYLES ===== */
        .main-section {
            background: rgba(255, 255, 255, 0.97);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 28px;
            box-shadow: 0 10px 36px rgba(17, 24, 39, 0.12);
            border: 1px solid rgba(226, 232, 240, 0.9);
        }
        .section-header {
            display: flex;
            align-items: center;
            gap: 12px;
            padding-bottom: 16px;
            margin-bottom: 18px;
            border-bottom: 1px solid #e5e7eb;
        }
        .section-header i {
            width: 36px;
            height: 36px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 10px;
            background: linear-gradient(135deg, #667eea 0%, #60a5fa 100%);
            color: #fff;
            box-shadow: 0 6px 18px rgba(102, 126, 234, 0.35);
        }
        .section-title {
            font-size: 18px;
            font-weight: 600;
            color: #1f2937;
        }

        /* Filtros */
        .filters-section {
            background: #f8fafc;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            padding: 16px;
            margin-bottom: 18px;
        }
        .filters-grid {
            display: grid;
            grid-template-columns: 1.2fr 0.8fr 0.8fr;
            gap: 12px;
            align-items: center;
        }
        .search-box { position: relative; }
        .search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #9ca3af;
        }
        .search-input {
            width: 100%;
            padding: 10px 12px 10px 36px;
            border: 1px solid #e5e7eb;
            border-radius: 10px;
            outline: none;
            background: #fff;
            font-size: 14px;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }
        .search-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.15);
        }
        .filter-select {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #e5e7eb;
            border-radius: 10px;
            background: #fff;
            font-size: 14px;
            color: #374151;
        }

        /* Lista de usuarios */
        .users-list {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }
        .user-item {
            display: grid;
            grid-template-columns: 56px 1.4fr 0.9fr 0.8fr;
            align-items: center;
            gap: 14px;
            padding: 14px;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            background: #fff;
            box-shadow: 0 4px 16px rgba(17, 24, 39, 0.06);
            transition: transform 0.15s ease, box-shadow 0.2s ease, border-color 0.2s ease;
        }
        .user-item:hover { transform: translateY(-1px); box-shadow: 0 6px 20px rgba(17, 24, 39, 0.09); }
        .user-item[data-status="active"] { border-color: rgba(52, 211, 153, 0.35); }
        .user-item[data-status="inactive"] { border-color: rgba(248, 113, 113, 0.35); }

        .user-avatar {
            width: 56px;
            height: 56px;
            border-radius: 14px;
            background: linear-gradient(135deg, #a78bfa 0%, #60a5fa 100%);
            color: #fff;
            display: flex; align-items: center; justify-content: center;
            font-weight: 700; font-size: 16px;
            box-shadow: 0 6px 18px rgba(96, 165, 250, 0.35);
        }
        .user-info { display: grid; gap: 6px; }
        .user-name { font-weight: 600; color: #111827; }
        .user-email, .user-code { color: #6b7280; font-size: 13px; display: flex; align-items: center; gap: 6px; }
        .user-email i, .user-code i { color: #9ca3af; }
        .user-role { font-size: 13px; color: #374151; background: #f3f4f6; padding: 6px 10px; border-radius: 8px; display: inline-block; }

        .role-select {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #e5e7eb;
            border-radius: 10px;
            background: #fff;
            font-size: 13px;
            color: #374151;
        }
        .user-actions { display: flex; justify-content: flex-end; }
        .action-btn {
            display: inline-flex; align-items: center; gap: 8px;
            padding: 10px 12px; border-radius: 10px;
            border: 1px solid #e5e7eb; background: #fff; color: #111827;
            font-size: 13px; font-weight: 600; cursor: pointer;
            transition: background 0.2s ease, box-shadow 0.2s ease, transform 0.15s ease;
        }
        .action-btn:hover { background: #f9fafb; box-shadow: 0 6px 20px rgba(17, 24, 39, 0.08); transform: translateY(-1px); }
        .action-btn.btn-toggle { border-color: #667eea; color: #4f46e5; }
        .action-btn.btn-toggle:hover { background: rgba(102, 126, 234, 0.08); }

        /* Spinner para acciones */
        .spinner {
            width: 16px; height: 16px; border: 2px solid #e5e7eb; border-top-color: #667eea; border-radius: 50%;
            display: inline-block; animation: spin 0.8s linear infinite; margin-right: 8px;
        }
        @keyframes spin { to { transform: rotate(360deg); } }

        @media (max-width: 992px) {
            .filters-grid { grid-template-columns: 1fr; }
            .user-item { grid-template-columns: 48px 1fr; grid-auto-rows: auto; }
            .role-select, .user-actions { margin-top: 8px; }
            .user-actions { justify-content: flex-start; }
        }

        /* ===== CHARTS & CHIPS ===== */
        .summary-charts {
            display: grid;
            grid-template-columns: repeat(2, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .chart-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            border: 1px solid rgba(255,255,255,0.3);
        }
        .chart-title {
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 12px;
        }
        .filter-chips {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 12px;
        }
        .chip {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 8px 12px;
            border-radius: 999px;
            border: 1px solid #e5e7eb;
            background: #fff;
            color: #374151;
            font-size: 13px;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .chip:hover { box-shadow: 0 4px 14px rgba(0,0,0,0.08); transform: translateY(-1px); }
        .chip.active { background: rgba(102,126,234,0.12); border-color: #667eea; color: #1f2937; }

        /* Tooltips educativos */
        [data-tooltip] { position: relative; }
        [data-tooltip]::after {
            content: attr(data-tooltip);
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            bottom: calc(100% + 8px);
            background: rgba(27, 42, 73, 0.95);
            color: #fff;
            padding: 8px 10px;
            border-radius: 8px;
            font-size: 12px;
            white-space: nowrap;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.2s ease, transform 0.2s ease;
        }
        [data-tooltip]:hover::after { opacity: 1; transform: translateX(-50%) translateY(-2px); }

        @media (max-width: 992px) {
            .summary-charts { grid-template-columns: 1fr; }
        }
        </style>
</head>
<body>
    <div class="dashboard-layout">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <h2>
                    <i class="fas fa-cogs"></i>
                    Panel Admin
                </h2>
                <div class="subtitle">Sistema de Gestión</div>
            </div>
            
            <nav class="sidebar-nav">
                <div class="nav-section">
                    <div class="nav-section-title">Principal</div>
                    <a href="/admin/dashboard" class="nav-item">
                        <i class="fas fa-home"></i>
                        Dashboard
                    </a>
                    <a href="/admin/projects" class="nav-item">
                        <i class="fas fa-project-diagram"></i>
                        Proyectos
                        <% if (typeof projectStats !== 'undefined' && projectStats.pending > 0) { %>
                            <span class="nav-item-badge"><%= projectStats.pending %></span>
                        <% } %>
                    </a>
                    <a href="/admin/users" class="nav-item active">
                        <i class="fas fa-users"></i>
                        Usuarios
                    </a>
                    <a href="/admin/roles" class="nav-item">
                        <i class="fas fa-user-shield"></i>
                        Roles
                    </a>
                </div>
                
                <div class="nav-section">
                    <div class="nav-section-title">Gestión</div>
                    <a href="/admin/research-lines" class="nav-item">
                        <i class="fas fa-microscope"></i>
                        Líneas de Investigación
                    </a>
                    <a href="/admin/academic-cycles" class="nav-item">
                        <i class="fas fa-calendar-week"></i>
                        Ciclos Académicos
                    </a>
                    <a href="/admin/invitations" class="nav-item">
                        <i class="fas fa-envelope-open-text"></i>
                        Códigos de Invitación
                        <!-- Badge removido temporalmente hasta implementar sistema -->
                    </a>
                    <a href="/admin/calendar" class="nav-item">
                        <i class="fas fa-calendar-alt"></i>
                        Calendario
                    </a>
                    <a href="/admin/reports" class="nav-item">
                        <i class="fas fa-chart-bar"></i>
                        Reportes
                    </a>
                    <a href="/admin/settings" class="nav-item">
                        <i class="fas fa-cog"></i>
                        Configuración
                    </a>
                </div>
                
                <div class="nav-section">
                    <div class="nav-section-title">Sistema</div>
                    <a href="/admin/backup" class="nav-item">
                        <i class="fas fa-database"></i>
                        Respaldos
                    </a>
                    <a href="/admin/logs" class="nav-item">
                        <i class="fas fa-file-alt"></i>
                        Logs del Sistema
                    </a>
                </div>
            </nav>
        </div>

        <!-- Contenido principal -->
        <div class="main-content">
            <!-- Top Bar -->
            <div class="top-bar">
                <button class="mobile-menu-toggle" onclick="toggleSidebar()">
                    <i class="fas fa-bars"></i>
                </button>
                
                <div class="page-title-section">
                    <h1 class="page-main-title">Gestión de Usuarios</h1>
                    <p class="page-subtitle">Administra todos los usuarios del sistema académico</p>
                </div>
                
                <div class="user-profile">
                    <div class="user-info">
                        <h4><%= (user && user.nombres) ? user.nombres + ' ' + (user.apellidos || '') : 'Usuario' %></h4>
                        <span><%= (user && user.rol_nombre) ? (((typeof user.rol_nombre === 'string') && (user.rol_nombre === 'Administrador General' || user.rol_nombre === 'Administrador' || user.rol_nombre.toLowerCase().includes('admin'))) ? 'Admin' : user.rol_nombre) : 'Admin' %></span>
                    </div>
                    <div class="user-avatar">
                        <%= (user && user.nombres) ? user.nombres.charAt(0).toUpperCase() : 'U' %>
                    </div>
                    <a href="/auth/logout" class="logout-btn">
                        <i class="fas fa-sign-out-alt"></i>
                        Salir
                    </a>
                </div>
            </div>

            <div class="users-container">


                <!-- Flash Messages -->
                <% if (typeof success !== 'undefined' && success && success.length > 0) { %>
                    <% success.forEach(msg => { %>
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle"></i>
                            <%= msg %>
                        </div>
                    <% }) %>
                <% } %>
                <% if (typeof error !== 'undefined' && error && error.length > 0) { %>
                    <% error.forEach(msg => { %>
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-circle"></i> <%= msg %>
                        </div>
                    <% }) %>
                <% } %>



                <!-- Estadísticas -->
                <div class="stats-grid">
                    <div class="stat-card">
                        <i class="fas fa-users stat-icon"></i>
                        <div class="stat-number"><%= userStats.total %></div>
                        <div class="stat-label">Total de Usuarios</div>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-user-check stat-icon"></i>
                        <div class="stat-number"><%= userStats.active %></div>
                        <div class="stat-label">Usuarios Activos</div>
                    </div>
                    <div class="stat-card">
                        <i class="fas fa-user-times stat-icon"></i>
                        <div class="stat-number"><%= userStats.inactive %></div>
                        <div class="stat-label">Usuarios Inactivos</div>
                    </div>
                    <% Object.keys(userStats.byRole).forEach(role => { %>
                        <div class="stat-card">
                            <i class="fas fa-graduation-cap stat-icon"></i>
                            <div class="stat-number"><%= userStats.byRole[role] %></div>
                            <div class="stat-label"><%= role %></div>
                        </div>
                    <% }) %>
                </div>

                <!-- Sección Principal -->
                <div class="main-section">
                    <div class="section-header">
                        <i class="fa-solid fa-users"></i>
                        <span class="section-title">Lista de Usuarios (<%= allUsers?.length || 0 %>)</span>
                    </div>
                
                    <div class="filters-section">
                        <div class="filters-grid">
                            <div class="filters-grid">
                                <div class="search-box">
                                    <i class="fa-solid fa-magnifying-glass search-icon"></i>
                                    <input type="text" class="search-input" placeholder="Buscar usuarios por nombre, email o código..." id="searchInput">
                                </div>
                                <select class="filter-select" id="statusFilter">
                                    <option value="all">Todos los estados</option>
                                    <option value="active">Activos</option>
                                    <option value="inactive">Inactivos</option>
                                </select>
                                <select class="filter-select" id="roleFilter">
                                    <option value="all">Todos los roles</option>
                                    <% roles.forEach(function(role){ %>
                                        <option value="<%= role.nombre %>"><%= role.nombre %></option>
                                    <% }) %>
                                </select>
                            </div>
                        </div>
                
                        <div class="users-list" id="usersList">
                            <% allUsers.forEach(function(userItem){ %>
                                <div class="user-item" data-user-id="<%= userItem.id %>" data-role="<%= userItem.rol_nombre %>" data-status="<%= userItem.activo ? 'active' : 'inactive' %>">
                                    <div class="user-avatar" title="<%= userItem.nombres %> <%= userItem.apellidos %>">
                                        <%= (userItem.nombres?.[0] || 'U') + (userItem.apellidos?.[0] || '') %>
                                    </div>
                                    <div class="user-info">
                                        <div class="user-name"><i class="fa-solid fa-id-badge"></i> <%= userItem.nombres %> <%= userItem.apellidos %></div>
                                        <div class="user-email"><i class="fa-solid fa-envelope"></i> <%= userItem.email %></div>
                                        <div class="user-code"><i class="fa-solid fa-hashtag"></i> <%= userItem.codigo_usuario %></div>
                                        <span class="user-role"><i class="fa-solid fa-user-shield"></i> <%= userItem.rol_nombre %></span>
                                    </div>
                                    <div>
                                        <select class="role-select" data-user-id="<%= userItem.id %>">
                                            <% roles.forEach(function(role){ %>
                                                <option value="<%= role.id %>" <%= role.nombre === userItem.rol_nombre ? 'selected' : '' %>><%= role.nombre %></option>
                                            <% }) %>
                                        </select>
                                    </div>
                                    <div class="user-actions">
                                        <button class="action-btn btn-toggle" onclick="toggleUserStatus(<%= userItem.id %>)">
                                            <i class="fa-solid <%= userItem.activo ? 'fa-toggle-on' : 'fa-toggle-off' %>"></i>
                                            <span><%= userItem.activo ? 'Desactivar' : 'Activar' %></span>
                                        </button>
                                    </div>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Función para cambiar estado de usuario
        async function toggleUserStatus(userId, currentStatus) {
            const button = event.target.closest('button');
            const originalContent = button.innerHTML;
            
            // Mostrar loading
            button.innerHTML = '<span class="spinner"></span> Procesando...';
            button.disabled = true;
            
            try {
                const response = await fetch(`/admin/users/${userId}/toggle-status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Mostrar mensaje de éxito
                    showNotification('Estado del usuario actualizado correctamente', 'success');
                    
                    // Actualizar UI sin recargar
                    const userItem = button.closest('.user-item');
                    if (userItem) {
                        userItem.dataset.status = result.newStatus ? 'active' : 'inactive';
                    }
                    const icon = button.querySelector('i');
                    const textSpan = button.querySelector('span');
                    if (icon) icon.className = `fa-solid ${result.newStatus ? 'fa-toggle-on' : 'fa-toggle-off'}`;
                    if (textSpan) textSpan.textContent = result.newStatus ? 'Desactivar' : 'Activar';
                    
                    // Reaplicar filtros para reflejar el cambio en la lista
                    if (typeof filterUsers === 'function') {
                        filterUsers();
                    }
                } else {
                    throw new Error(result.error || 'Error desconocido');
                }
            } catch (error) {
                // Restaurar botón
                button.innerHTML = originalContent;
                showNotification('Error al cambiar estado del usuario: ' + error.message, 'error');
                console.error(error);
            } finally {
                button.disabled = false;
            }
        }
        
        // Función para cambiar rol de usuario
        async function changeUserRole(userId, newRoleId, selectElement) {
            const originalValue = selectElement.dataset.originalValue;
            
            try {
                selectElement.disabled = true;
                
                const response = await fetch(`/admin/users/${userId}/change-role`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ roleId: newRoleId })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showNotification('Rol del usuario actualizado correctamente', 'success');
                    selectElement.dataset.originalValue = newRoleId;
                    // Actualizar UI: etiqueta de rol y atributo de filtro
                    const userItem = selectElement.closest('.user-item');
                    if (userItem) {
                        userItem.dataset.role = result.newRole;
                        const roleLabel = userItem.querySelector('.user-role');
                        if (roleLabel) {
                            roleLabel.innerHTML = `<i class="fa-solid fa-user-shield"></i> ${result.newRole}`;
                        }
                    }
                    // Reaplicar filtros para reflejar el cambio
                    if (typeof filterUsers === 'function') {
                        filterUsers();
                    }
                } else {
                    throw new Error(result.error || 'Error desconocido');
                }
            } catch (error) {
                // Revertir selección
                selectElement.value = originalValue;
                showNotification('Error al cambiar rol del usuario: ' + error.message, 'error');
                console.error(error);
            } finally {
                selectElement.disabled = false;
            }
        }
        
        // Función para mostrar notificaciones
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `alert ${type === 'success' ? 'alert-success' : type === 'error' ? 'alert-danger' : `alert-${type}`}`;
            notification.innerHTML = `
                <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                ${message}
            `;
            
            const container = document.querySelector('.users-container');
            container.insertBefore(notification, container.firstChild);
            
            // Remover después de 5 segundos
            setTimeout(() => {
                notification.remove();
            }, 5000);
        }
        
        // Función de búsqueda y filtrado
        function filterUsers() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const roleFilter = document.getElementById('roleFilter').value;
            const statusFilter = document.getElementById('statusFilter').value;
            
            const userItems = document.querySelectorAll('.user-item');
            
            userItems.forEach(item => {
                const userName = item.querySelector('.user-name').textContent.toLowerCase();
                const userEmail = item.querySelector('.user-email').textContent.toLowerCase();
                const userCode = item.querySelector('.user-code').textContent.toLowerCase();
                const userRole = item.dataset.role;
                const userStatus = item.dataset.status;
                
                const matchesSearch = !searchTerm || userName.includes(searchTerm) || 
                                    userEmail.includes(searchTerm) || 
                                    userCode.includes(searchTerm);
                const matchesRole = roleFilter === 'all' || !roleFilter || userRole === roleFilter;
                const matchesStatus = statusFilter === 'all' || !statusFilter || userStatus === statusFilter;
                
                // Usar estilo vacío para respetar el display del CSS (grid)
                item.style.display = (matchesSearch && matchesRole && matchesStatus) ? '' : 'none';
            });
        }
        
        // Toggle sidebar for mobile
        function toggleSidebar() {
            const sidebar = document.querySelector('.sidebar');
            sidebar.classList.toggle('open');
        }
        
        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Filtros de búsqueda
            document.getElementById('searchInput').addEventListener('input', filterUsers);
            document.getElementById('roleFilter').addEventListener('change', filterUsers);
            document.getElementById('statusFilter').addEventListener('change', filterUsers);
            
            // Aplicar filtros iniciales para asegurar que se muestre el listado correctamente
            filterUsers();
            
            // Event listeners para cambios de rol
            const roleSelects = document.querySelectorAll('.role-select');
            
            roleSelects.forEach(select => {
                // Guardar valor original
                select.dataset.originalValue = select.value;
                
                select.addEventListener('change', function() {
                    const userId = this.dataset.userId;
                    const newRoleId = this.value;
                    
                    if (confirm('¿Estás seguro de que quieres cambiar el rol de este usuario?')) {
                        changeUserRole(userId, newRoleId, this);
                    } else {
                        // Revertir selección si se cancela
                        this.value = this.dataset.originalValue;
                    }
                });
            });
        });
    </script>
</body>
</html>