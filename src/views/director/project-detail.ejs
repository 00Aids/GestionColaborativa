<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> - Sistema de Gestión Académica</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%); color: #2d3748; min-height: 100vh; }
    .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 1rem 2rem; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
    .header-content { display: flex; justify-content: space-between; align-items: center; max-width: 1200px; margin: 0 auto; }
    .logo { font-size: 1.5rem; font-weight: bold; }
    .user-info { display: flex; align-items: center; gap: 1rem; }
    .nav-menu { background: white; padding: 1rem 2rem; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    .nav-content { max-width: 1200px; margin: 0 auto; display: flex; gap: 2rem; }
    .nav-link { text-decoration: none; color: #4a5568; padding: 0.5rem 1rem; border-radius: 5px; transition: all 0.3s; }
    .nav-link:hover, .nav-link.active { background: #667eea; color: white; }
    .container { max-width: 1200px; margin: 0 auto; padding: 2rem; }
    .page-header { margin-bottom: 1.5rem; }
    .page-header h1 { color: #2d3748; margin-bottom: 0.5rem; }
    .text-muted { color: #6c757d; }
    .actions { display: flex; gap: 1rem; margin-bottom: 1.5rem; }
    .btn { padding: 0.6rem 1rem; border: none; border-radius: 5px; cursor: pointer; text-decoration: none; text-align: center; font-size: 0.9rem; transition: all 0.3s; display: inline-flex; align-items: center; gap: 0.5rem; }
    .btn-primary { background: #667eea; color: white; }
    .btn-primary:hover { background: #5a6fd8; }
    .btn-outline { background: transparent; color: #667eea; border: 1px solid #667eea; }
    .btn-outline:hover { background: #667eea; color: white; }
    .grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem; }
    .card { background: white; padding: 1rem; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
    .card h3 { margin-bottom: 0.75rem; color: #2d3748; }
    .detail-item { display: flex; justify-content: space-between; margin: 0.35rem 0; }
    .label { font-weight: 600; color: #4a5568; }
    .value { color: #2d3748; }
    .list { display: grid; grid-template-columns: 1fr; gap: 0.75rem; }
    .list-item { background: #fff; border: 1px solid #e2e8f0; border-radius: 8px; padding: 0.75rem; display: grid; grid-template-columns: 1fr auto; align-items: center; }
    .item-title { font-weight: 600; color: #2d3748; }
    .item-meta { color: #6c757d; font-size: 0.85rem; }
    .badge { display: inline-block; padding: 0.25rem 0.6rem; border-radius: 999px; font-size: 0.8rem; }
    .badge-pendiente { background: #fff3cd; color: #856404; border: 1px solid #ffeeba; }
    .badge-entregado { background: #cce5ff; color: #004085; border: 1px solid #b8daff; }
    .badge-en_revision { background: #d6d8db; color: #383d41; border: 1px solid #c6c8ca; }
    .badge-aprobado { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
    .badge-rechazado { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
  </style>
</head>
<body>
  <header class="header">
    <div class="header-content">
      <div class="logo">Director – Gestión Académica</div>
      <div class="user-info">
        <i class="fas fa-user-circle"></i>
        <span><%= user && (user.nombre || user.email) %></span>
      </div>
    </div>
  </header>

  <nav class="nav-menu">
    <div class="nav-content">
      <a href="/director/projects" class="nav-link active">Proyectos</a>
      <a href="/director/deliverables" class="nav-link">Entregables</a>
    </div>
  </nav>

  <main class="container">
    <div class="page-header">
      <h1><%= project && project.titulo ? project.titulo : 'Proyecto' %></h1>
      <p class="text-muted">Detalle del proyecto dirigido</p>
    </div>

    <div class="actions">
      <a href="/director/projects" class="btn btn-outline"><i class="fas fa-arrow-left"></i> Volver a Proyectos</a>
      <a href="/director/deliverables" class="btn btn-outline"><i class="fas fa-clipboard-list"></i> Ver Entregables</a>
      <button id="openCreateDeliverableBtn" class="btn btn-primary"><i class="fas fa-plus"></i> Crear Entregable</button>
    </div>

    <div class="grid" style="margin-bottom: 1.5rem;">
      <div class="card">
        <h3>Información del Proyecto</h3>
        <div class="detail-item"><span class="label">Estado:</span><span class="value"><%= project && project.estado ? project.estado : '—' %></span></div>
        <div class="detail-item"><span class="label">Fecha de Inicio:</span><span class="value"><%= project && project.fecha_inicio ? new Date(project.fecha_inicio).toLocaleDateString('es-ES') : '—' %></span></div>
        <div class="detail-item"><span class="label">Fecha de Fin:</span><span class="value"><%= project && project.fecha_fin ? new Date(project.fecha_fin).toLocaleDateString('es-ES') : '—' %></span></div>
        <div class="detail-item"><span class="label">Área de Trabajo:</span><span class="value"><%= project && (project.area_nombre || project.area_trabajo_id) ? (project.area_nombre || ('ID ' + project.area_trabajo_id)) : '—' %></span></div>
        <div class="detail-item"><span class="label">Estudiante:</span><span class="value"><%= project && (project.estudiante_nombre || project.estudiante_id) ? (project.estudiante_nombre || ('ID ' + project.estudiante_id)) : '—' %></span></div>
      </div>
      <div class="card">
        <h3>Resumen</h3>
        <div class="detail-item"><span class="label">Entregables:</span><span class="value"><%= Array.isArray(deliverables) ? deliverables.length : 0 %></span></div>
      </div>
    </div>

    <section class="card" style="margin-bottom: 1.5rem;">
      <h3>Entregables del Proyecto</h3>
      <% if (deliverables && deliverables.length > 0) { %>
        <div class="list">
          <% deliverables.forEach(function(d) { %>
            <div class="list-item">
              <div>
                <div class="item-title"><%= d.titulo || ('Entregable #' + d.id) %></div>
                <div class="item-meta">
                  Estado: 
                  <% const estadoClase = d.estado ? ('badge-' + d.estado.replace(/\s+/g,'_')) : 'badge'; %>
                  <span class="badge <%= estadoClase %>"><%= d.estado || 'pendiente' %></span>
                  · Fecha entrega: <%= d.fecha_entrega ? new Date(d.fecha_entrega).toLocaleDateString('es-ES') : '—' %>
                  <% if (d.fecha_limite) { %> · Fecha límite: <%= new Date(d.fecha_limite).toLocaleDateString('es-ES') %> <% } %>
                </div>
              </div>
              <div>
                <a href="/director/deliverables" class="btn btn-outline btn-sm"><i class="fas fa-search"></i> Revisar</a>
              </div>
            </div>
          <% }) %>
        </div>
      <% } else { %>
        <p class="text-muted">No hay entregables registrados para este proyecto.</p>
      <% } %>
    </section>

    <!-- Modal crear entregable -->
    <style>
      .modal-backdrop { position: fixed; inset: 0; background: rgba(0,0,0,0.45); display: none; align-items: center; justify-content: center; z-index: 1000; }
      .modal { background: #fff; width: 95%; max-width: 720px; border-radius: 10px; box-shadow: 0 15px 40px rgba(0,0,0,0.2); overflow: hidden; }
      .modal-header { display: flex; justify-content: space-between; align-items: center; padding: 1rem 1.25rem; background: #667eea; color: #fff; }
      .modal-body { padding: 1rem 1.25rem; }
      .modal-footer { padding: 0.75rem 1.25rem; background: #f7fafc; display: flex; justify-content: flex-end; gap: 0.75rem; }
      .form-row { display: grid; grid-template-columns: 1fr 1fr; gap: 0.75rem; margin-bottom: 0.75rem; }
      .form-control { width: 100%; padding: 0.6rem; border: 1px solid #cbd5e0; border-radius: 6px; }
      .form-label { font-size: 0.9rem; color: #4a5568; margin-bottom: 0.25rem; display: block; }
      .error-msg { color: #e53e3e; font-size: 0.85rem; margin-top: 0.25rem; display: none; }
      .tag-hint { font-size: 0.82rem; color: #718096; }
    </style>

    <div id="createDeliverableModal" class="modal-backdrop" aria-hidden="true">
      <div class="modal" role="dialog" aria-modal="true" aria-labelledby="modalTitle">
        <div class="modal-header">
          <h3 id="modalTitle"><i class="fas fa-tasks"></i> Crear Entregable</h3>
          <button id="closeCreateDeliverableBtn" class="btn btn-outline"><i class="fas fa-times"></i> Cerrar</button>
        </div>
        <form id="deliverableForm" enctype="multipart/form-data">
          <div class="modal-body">
            <div class="form-row">
              <div>
                <label class="form-label" for="titulo">Título</label>
                <input type="text" id="titulo" name="titulo" class="form-control" placeholder="Título del entregable" required />
                <div id="errorTitulo" class="error-msg">El título es obligatorio</div>
              </div>
              <div>
                <label class="form-label" for="fase_id">Fase</label>
                <select id="fase_id" name="fase_id" class="form-control" required>
                  <option value="">Seleccione fase...</option>
                  <% (fases || []).forEach(function(f){ %>
                    <option value="<%= f.id %>"><%= f.nombre %></option>
                  <% }) %>
                </select>
              </div>
            </div>

            <div class="form-row">
              <div>
                <label class="form-label" for="asignado_a">Asignar a</label>
                <select id="asignado_a" name="asignado_a" class="form-control">
                  <option value="">Sin asignar</option>
                </select>
                <div class="tag-hint">Solo se muestran estudiantes del proyecto</div>
              </div>
              <div>
                <label class="form-label" for="fecha_entrega">Fecha Límite</label>
                <input type="date" id="fecha_entrega" name="fecha_entrega" class="form-control" required />
                <div id="errorFecha" class="error-msg">La fecha debe ser posterior a hoy</div>
              </div>
            </div>

            <div class="form-row">
              <div>
                <label class="form-label" for="estimacion_horas">Estimación (horas)</label>
                <input type="number" id="estimacion_horas" name="estimacion_horas" class="form-control" min="0" step="0.5" placeholder="Ej. 8" />
              </div>
              <div>
                <label class="form-label" for="estado">Estado Inicial</label>
                <select id="estado" name="estado" class="form-control">
                  <option value="pendiente">Por Hacer</option>
                  <option value="en_progreso">En Progreso</option>
                  <option value="entregado">Entregado</option>
                  <option value="en_revision">En Revisión</option>
                  <option value="aprobado">Aprobado</option>
                  <option value="rechazado">Rechazado</option>
                </select>
              </div>
            </div>

            <div style="margin-bottom: 0.75rem;">
              <label class="form-label" for="descripcion">Descripción</label>
              <textarea id="descripcion" name="descripcion" class="form-control" rows="4" placeholder="Detalles y alcance"></textarea>
            </div>

            <div class="form-row">
              <div>
                <label class="form-label" for="etiquetas">Etiquetas</label>
                <input type="text" id="etiquetas" name="etiquetas" class="form-control" placeholder="frontend, backend, diseño" />
                <div class="tag-hint">Separadas por comas</div>
              </div>
              <div>
                <label class="form-label" for="archivos">Archivos Adjuntos</label>
                <input type="file" id="archivos" name="archivos" class="form-control" multiple />
                <div class="tag-hint">Puedes adjuntar múltiples archivos relacionados</div>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" id="cancelCreateDeliverableBtn" class="btn btn-outline">Cancelar</button>
            <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Guardar</button>
          </div>
        </form>
      </div>
    </div>

    <script>
      (function(){
        const projectId = <%= project && project.id ? project.id : 'null' %>;
        const modal = document.getElementById('createDeliverableModal');
        const openBtn = document.getElementById('openCreateDeliverableBtn');
        const closeBtn = document.getElementById('closeCreateDeliverableBtn');
        const cancelBtn = document.getElementById('cancelCreateDeliverableBtn');
        const form = document.getElementById('deliverableForm');
        const selectUsers = document.getElementById('asignado_a');
        const errorTitulo = document.getElementById('errorTitulo');
        const errorFecha = document.getElementById('errorFecha');

        function openModal(){ modal.style.display = 'flex'; }
        function closeModal(){ modal.style.display = 'none'; }

        openBtn && openBtn.addEventListener('click', openModal);
        closeBtn && closeBtn.addEventListener('click', closeModal);
        cancelBtn && cancelBtn.addEventListener('click', closeModal);

        // Cargar usuarios (solo estudiantes del proyecto)
        async function loadUsers(){
          if (!projectId) return;
          try {
            const resp = await fetch(`/director/api/projects/${projectId}/available-users`);
            const data = await resp.json();
            if (data && data.success) {
              // Limpiar y volver a agregar "Sin asignar"
              selectUsers.innerHTML = '<option value="">Sin asignar</option>';
              (data.users || []).forEach(u => {
                const opt = document.createElement('option');
                opt.value = u.id;
                opt.textContent = `${u.nombres} ${u.apellidos}` + (u.codigo_usuario ? ` (${u.codigo_usuario})` : '');
                selectUsers.appendChild(opt);
              });
            }
          } catch (e) {
            console.error('Error cargando usuarios del proyecto:', e);
          }
        }
        loadUsers();

        // Validaciones y envío
        form && form.addEventListener('submit', async (ev) => {
          ev.preventDefault();
          errorTitulo.style.display = 'none';
          errorFecha.style.display = 'none';

          const titulo = document.getElementById('titulo').value.trim();
          const fechaEntrega = document.getElementById('fecha_entrega').value;
          if (!titulo) { errorTitulo.style.display = 'block'; return; }
          if (!fechaEntrega) { errorFecha.textContent = 'La fecha es obligatoria'; errorFecha.style.display = 'block'; return; }

          const due = new Date(fechaEntrega);
          const today = new Date(); today.setHours(0,0,0,0);
          if (due <= today) { errorFecha.textContent = 'La fecha debe ser posterior a hoy'; errorFecha.style.display = 'block'; return; }

          const fd = new FormData(form);
          try {
            const resp = await fetch(`/director/api/projects/${projectId}/deliverables`, { method: 'POST', body: fd });
            const data = await resp.json();
            if (data && data.success) {
              alert('Entregable creado exitosamente');
              window.location.reload();
            } else {
              alert(data.error || 'Error al crear el entregable');
            }
          } catch (e) {
            console.error('Error al enviar el formulario:', e);
            alert('Error de red o servidor');
          }
        });
      })();
    </script>
  
  </main>
</body>
</html>