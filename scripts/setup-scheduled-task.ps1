# Script para configurar tarea programada de notificaciones autom√°ticas
# Ejecutar como administrador

param(
    [string]$TaskName = "GestionColaborativa-Notifications",
    [string]$ProjectPath = "C:\Users\josti\Desktop\GestionColaborativa",
    [string]$ScheduleTime = "09:00",  # Hora de ejecuci√≥n diaria
    [switch]$Remove = $false
)

# Verificar si se ejecuta como administrador
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Error "Este script debe ejecutarse como administrador"
    exit 1
}

# Funci√≥n para eliminar tarea existente
function Remove-ExistingTask {
    param($Name)
    
    try {
        $existingTask = Get-ScheduledTask -TaskName $Name -ErrorAction SilentlyContinue
        if ($existingTask) {
            Unregister-ScheduledTask -TaskName $Name -Confirm:$false
            Write-Host "‚úÖ Tarea existente '$Name' eliminada" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ÑπÔ∏è No se encontr√≥ tarea existente '$Name'" -ForegroundColor Yellow
    }
}

# Si se solicita eliminar la tarea
if ($Remove) {
    Remove-ExistingTask -Name $TaskName
    Write-Host "üóëÔ∏è Tarea programada eliminada exitosamente" -ForegroundColor Green
    exit 0
}

Write-Host "üöÄ Configurando tarea programada para notificaciones autom√°ticas..." -ForegroundColor Cyan
Write-Host "üìÅ Proyecto: $ProjectPath" -ForegroundColor Gray
Write-Host "‚è∞ Horario: Diario a las $ScheduleTime" -ForegroundColor Gray

# Eliminar tarea existente si existe
Remove-ExistingTask -Name $TaskName

# Configurar la acci√≥n (script a ejecutar)
$scriptPath = Join-Path $ProjectPath "scripts\run-notifications.bat"
$action = New-ScheduledTaskAction -Execute "cmd.exe" -Argument "/c `"$scriptPath`""

# Configurar el trigger (diario a las 9:00 AM)
$trigger = New-ScheduledTaskTrigger -Daily -At $ScheduleTime

# Configurar las opciones de la tarea
$settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries -StartWhenAvailable -RunOnlyIfNetworkAvailable

# Configurar el principal (usuario que ejecuta la tarea)
$principal = New-ScheduledTaskPrincipal -UserId "SYSTEM" -LogonType ServiceAccount -RunLevel Highest

# Crear la tarea programada
try {
    Register-ScheduledTask -TaskName $TaskName -Action $action -Trigger $trigger -Settings $settings -Principal $principal -Description "Ejecuta notificaciones autom√°ticas para el sistema de Gesti√≥n Colaborativa"
    
    Write-Host "‚úÖ Tarea programada '$TaskName' creada exitosamente" -ForegroundColor Green
    Write-Host "üìã Detalles de la tarea:" -ForegroundColor Cyan
    Write-Host "   - Nombre: $TaskName" -ForegroundColor Gray
    Write-Host "   - Script: $scriptPath" -ForegroundColor Gray
    Write-Host "   - Horario: Diario a las $ScheduleTime" -ForegroundColor Gray
    Write-Host "   - Usuario: SYSTEM" -ForegroundColor Gray
    
    # Mostrar informaci√≥n de la tarea creada
    $task = Get-ScheduledTask -TaskName $TaskName
    Write-Host "üìä Estado de la tarea: $($task.State)" -ForegroundColor Gray
    
    # Opci√≥n para ejecutar inmediatamente
    $runNow = Read-Host "¬øDesea ejecutar la tarea ahora para probar? (s/n)"
    if ($runNow -eq "s" -or $runNow -eq "S") {
        Start-ScheduledTask -TaskName $TaskName
        Write-Host "üèÉ Tarea ejecutada. Revise los logs en: $ProjectPath\logs\" -ForegroundColor Green
    }
    
} catch {
    Write-Error "‚ùå Error creando la tarea programada: $($_.Exception.Message)"
    exit 1
}

Write-Host "`nüéâ Configuraci√≥n completada exitosamente!" -ForegroundColor Green
Write-Host "üìù Para gestionar la tarea:" -ForegroundColor Cyan
Write-Host "   - Ver tareas: Get-ScheduledTask -TaskName '$TaskName'" -ForegroundColor Gray
Write-Host "   - Ejecutar manualmente: Start-ScheduledTask -TaskName '$TaskName'" -ForegroundColor Gray
Write-Host "   - Eliminar tarea: .\setup-scheduled-task.ps1 -Remove" -ForegroundColor Gray
Write-Host "   - Ver logs: dir $ProjectPath\logs\" -ForegroundColor Gray